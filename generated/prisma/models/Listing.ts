
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Listing` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Listing
 * 
 */
export type ListingModel = runtime.Types.Result.DefaultSelection<Prisma.$ListingPayload>

export type AggregateListing = {
  _count: ListingCountAggregateOutputType | null
  _avg: ListingAvgAggregateOutputType | null
  _sum: ListingSumAggregateOutputType | null
  _min: ListingMinAggregateOutputType | null
  _max: ListingMaxAggregateOutputType | null
}

export type ListingAvgAggregateOutputType = {
  id: number | null
  categoryId: number | null
  webId: number | null
  locationId: number | null
}

export type ListingSumAggregateOutputType = {
  id: number | null
  categoryId: number | null
  webId: number | null
  locationId: number | null
}

export type ListingMinAggregateOutputType = {
  id: number | null
  createdAt: Date | null
  updatedAt: Date | null
  title: string | null
  website: string | null
  description: string | null
  email: string | null
  notes: string | null
  inactive: boolean | null
  seekingVolunteers: boolean | null
  categoryId: number | null
  image: string | null
  slug: string | null
  webId: number | null
  pending: boolean | null
  proposerId: string | null
  featured: boolean | null
  locationId: number | null
}

export type ListingMaxAggregateOutputType = {
  id: number | null
  createdAt: Date | null
  updatedAt: Date | null
  title: string | null
  website: string | null
  description: string | null
  email: string | null
  notes: string | null
  inactive: boolean | null
  seekingVolunteers: boolean | null
  categoryId: number | null
  image: string | null
  slug: string | null
  webId: number | null
  pending: boolean | null
  proposerId: string | null
  featured: boolean | null
  locationId: number | null
}

export type ListingCountAggregateOutputType = {
  id: number
  createdAt: number
  updatedAt: number
  title: number
  website: number
  description: number
  email: number
  notes: number
  inactive: number
  seekingVolunteers: number
  categoryId: number
  image: number
  slug: number
  webId: number
  pending: number
  proposerId: number
  featured: number
  locationId: number
  _all: number
}


export type ListingAvgAggregateInputType = {
  id?: true
  categoryId?: true
  webId?: true
  locationId?: true
}

export type ListingSumAggregateInputType = {
  id?: true
  categoryId?: true
  webId?: true
  locationId?: true
}

export type ListingMinAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  title?: true
  website?: true
  description?: true
  email?: true
  notes?: true
  inactive?: true
  seekingVolunteers?: true
  categoryId?: true
  image?: true
  slug?: true
  webId?: true
  pending?: true
  proposerId?: true
  featured?: true
  locationId?: true
}

export type ListingMaxAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  title?: true
  website?: true
  description?: true
  email?: true
  notes?: true
  inactive?: true
  seekingVolunteers?: true
  categoryId?: true
  image?: true
  slug?: true
  webId?: true
  pending?: true
  proposerId?: true
  featured?: true
  locationId?: true
}

export type ListingCountAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  title?: true
  website?: true
  description?: true
  email?: true
  notes?: true
  inactive?: true
  seekingVolunteers?: true
  categoryId?: true
  image?: true
  slug?: true
  webId?: true
  pending?: true
  proposerId?: true
  featured?: true
  locationId?: true
  _all?: true
}

export type ListingAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Listing to aggregate.
   */
  where?: Prisma.ListingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Listings to fetch.
   */
  orderBy?: Prisma.ListingOrderByWithRelationInput | Prisma.ListingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ListingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Listings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Listings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Listings
  **/
  _count?: true | ListingCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ListingAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ListingSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ListingMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ListingMaxAggregateInputType
}

export type GetListingAggregateType<T extends ListingAggregateArgs> = {
      [P in keyof T & keyof AggregateListing]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateListing[P]>
    : Prisma.GetScalarType<T[P], AggregateListing[P]>
}




export type ListingGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ListingWhereInput
  orderBy?: Prisma.ListingOrderByWithAggregationInput | Prisma.ListingOrderByWithAggregationInput[]
  by: Prisma.ListingScalarFieldEnum[] | Prisma.ListingScalarFieldEnum
  having?: Prisma.ListingScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ListingCountAggregateInputType | true
  _avg?: ListingAvgAggregateInputType
  _sum?: ListingSumAggregateInputType
  _min?: ListingMinAggregateInputType
  _max?: ListingMaxAggregateInputType
}

export type ListingGroupByOutputType = {
  id: number
  createdAt: Date
  updatedAt: Date
  title: string
  website: string | null
  description: string | null
  email: string | null
  notes: string | null
  inactive: boolean
  seekingVolunteers: boolean | null
  categoryId: number | null
  image: string | null
  slug: string
  webId: number
  pending: boolean
  proposerId: string | null
  featured: boolean
  locationId: number | null
  _count: ListingCountAggregateOutputType | null
  _avg: ListingAvgAggregateOutputType | null
  _sum: ListingSumAggregateOutputType | null
  _min: ListingMinAggregateOutputType | null
  _max: ListingMaxAggregateOutputType | null
}

type GetListingGroupByPayload<T extends ListingGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ListingGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ListingGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ListingGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ListingGroupByOutputType[P]>
      }
    >
  >



export type ListingWhereInput = {
  AND?: Prisma.ListingWhereInput | Prisma.ListingWhereInput[]
  OR?: Prisma.ListingWhereInput[]
  NOT?: Prisma.ListingWhereInput | Prisma.ListingWhereInput[]
  id?: Prisma.IntFilter<"Listing"> | number
  createdAt?: Prisma.DateTimeFilter<"Listing"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Listing"> | Date | string
  title?: Prisma.StringFilter<"Listing"> | string
  website?: Prisma.StringNullableFilter<"Listing"> | string | null
  description?: Prisma.StringNullableFilter<"Listing"> | string | null
  email?: Prisma.StringNullableFilter<"Listing"> | string | null
  notes?: Prisma.StringNullableFilter<"Listing"> | string | null
  inactive?: Prisma.BoolFilter<"Listing"> | boolean
  seekingVolunteers?: Prisma.BoolNullableFilter<"Listing"> | boolean | null
  categoryId?: Prisma.IntNullableFilter<"Listing"> | number | null
  image?: Prisma.StringNullableFilter<"Listing"> | string | null
  slug?: Prisma.StringFilter<"Listing"> | string
  webId?: Prisma.IntFilter<"Listing"> | number
  pending?: Prisma.BoolFilter<"Listing"> | boolean
  proposerId?: Prisma.StringNullableFilter<"Listing"> | string | null
  featured?: Prisma.BoolFilter<"Listing"> | boolean
  locationId?: Prisma.IntNullableFilter<"Listing"> | number | null
  socials?: Prisma.ListingSocialMediaListRelationFilter
  web?: Prisma.XOR<Prisma.WebNullableScalarRelationFilter, Prisma.WebWhereInput> | null
  category?: Prisma.XOR<Prisma.CategoryNullableScalarRelationFilter, Prisma.CategoryWhereInput> | null
  permissions?: Prisma.PermissionListRelationFilter
  tags?: Prisma.TagListRelationFilter
  relations?: Prisma.ListingListRelationFilter
  relationOf?: Prisma.ListingListRelationFilter
  proposer?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  location?: Prisma.XOR<Prisma.ListingLocationNullableScalarRelationFilter, Prisma.ListingLocationWhereInput> | null
  edits?: Prisma.ListingEditListRelationFilter
  actions?: Prisma.ListingActionListRelationFilter
}

export type ListingOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  title?: Prisma.SortOrder
  website?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  inactive?: Prisma.SortOrder
  seekingVolunteers?: Prisma.SortOrderInput | Prisma.SortOrder
  categoryId?: Prisma.SortOrderInput | Prisma.SortOrder
  image?: Prisma.SortOrderInput | Prisma.SortOrder
  slug?: Prisma.SortOrder
  webId?: Prisma.SortOrder
  pending?: Prisma.SortOrder
  proposerId?: Prisma.SortOrderInput | Prisma.SortOrder
  featured?: Prisma.SortOrder
  locationId?: Prisma.SortOrderInput | Prisma.SortOrder
  socials?: Prisma.ListingSocialMediaOrderByRelationAggregateInput
  web?: Prisma.WebOrderByWithRelationInput
  category?: Prisma.CategoryOrderByWithRelationInput
  permissions?: Prisma.PermissionOrderByRelationAggregateInput
  tags?: Prisma.TagOrderByRelationAggregateInput
  relations?: Prisma.ListingOrderByRelationAggregateInput
  relationOf?: Prisma.ListingOrderByRelationAggregateInput
  proposer?: Prisma.UserOrderByWithRelationInput
  location?: Prisma.ListingLocationOrderByWithRelationInput
  edits?: Prisma.ListingEditOrderByRelationAggregateInput
  actions?: Prisma.ListingActionOrderByRelationAggregateInput
}

export type ListingWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  locationId?: number
  webId_slug?: Prisma.ListingWebIdSlugCompoundUniqueInput
  AND?: Prisma.ListingWhereInput | Prisma.ListingWhereInput[]
  OR?: Prisma.ListingWhereInput[]
  NOT?: Prisma.ListingWhereInput | Prisma.ListingWhereInput[]
  createdAt?: Prisma.DateTimeFilter<"Listing"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Listing"> | Date | string
  title?: Prisma.StringFilter<"Listing"> | string
  website?: Prisma.StringNullableFilter<"Listing"> | string | null
  description?: Prisma.StringNullableFilter<"Listing"> | string | null
  email?: Prisma.StringNullableFilter<"Listing"> | string | null
  notes?: Prisma.StringNullableFilter<"Listing"> | string | null
  inactive?: Prisma.BoolFilter<"Listing"> | boolean
  seekingVolunteers?: Prisma.BoolNullableFilter<"Listing"> | boolean | null
  categoryId?: Prisma.IntNullableFilter<"Listing"> | number | null
  image?: Prisma.StringNullableFilter<"Listing"> | string | null
  slug?: Prisma.StringFilter<"Listing"> | string
  webId?: Prisma.IntFilter<"Listing"> | number
  pending?: Prisma.BoolFilter<"Listing"> | boolean
  proposerId?: Prisma.StringNullableFilter<"Listing"> | string | null
  featured?: Prisma.BoolFilter<"Listing"> | boolean
  socials?: Prisma.ListingSocialMediaListRelationFilter
  web?: Prisma.XOR<Prisma.WebNullableScalarRelationFilter, Prisma.WebWhereInput> | null
  category?: Prisma.XOR<Prisma.CategoryNullableScalarRelationFilter, Prisma.CategoryWhereInput> | null
  permissions?: Prisma.PermissionListRelationFilter
  tags?: Prisma.TagListRelationFilter
  relations?: Prisma.ListingListRelationFilter
  relationOf?: Prisma.ListingListRelationFilter
  proposer?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  location?: Prisma.XOR<Prisma.ListingLocationNullableScalarRelationFilter, Prisma.ListingLocationWhereInput> | null
  edits?: Prisma.ListingEditListRelationFilter
  actions?: Prisma.ListingActionListRelationFilter
}, "id" | "locationId" | "webId_slug">

export type ListingOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  title?: Prisma.SortOrder
  website?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  inactive?: Prisma.SortOrder
  seekingVolunteers?: Prisma.SortOrderInput | Prisma.SortOrder
  categoryId?: Prisma.SortOrderInput | Prisma.SortOrder
  image?: Prisma.SortOrderInput | Prisma.SortOrder
  slug?: Prisma.SortOrder
  webId?: Prisma.SortOrder
  pending?: Prisma.SortOrder
  proposerId?: Prisma.SortOrderInput | Prisma.SortOrder
  featured?: Prisma.SortOrder
  locationId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.ListingCountOrderByAggregateInput
  _avg?: Prisma.ListingAvgOrderByAggregateInput
  _max?: Prisma.ListingMaxOrderByAggregateInput
  _min?: Prisma.ListingMinOrderByAggregateInput
  _sum?: Prisma.ListingSumOrderByAggregateInput
}

export type ListingScalarWhereWithAggregatesInput = {
  AND?: Prisma.ListingScalarWhereWithAggregatesInput | Prisma.ListingScalarWhereWithAggregatesInput[]
  OR?: Prisma.ListingScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ListingScalarWhereWithAggregatesInput | Prisma.ListingScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Listing"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Listing"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Listing"> | Date | string
  title?: Prisma.StringWithAggregatesFilter<"Listing"> | string
  website?: Prisma.StringNullableWithAggregatesFilter<"Listing"> | string | null
  description?: Prisma.StringNullableWithAggregatesFilter<"Listing"> | string | null
  email?: Prisma.StringNullableWithAggregatesFilter<"Listing"> | string | null
  notes?: Prisma.StringNullableWithAggregatesFilter<"Listing"> | string | null
  inactive?: Prisma.BoolWithAggregatesFilter<"Listing"> | boolean
  seekingVolunteers?: Prisma.BoolNullableWithAggregatesFilter<"Listing"> | boolean | null
  categoryId?: Prisma.IntNullableWithAggregatesFilter<"Listing"> | number | null
  image?: Prisma.StringNullableWithAggregatesFilter<"Listing"> | string | null
  slug?: Prisma.StringWithAggregatesFilter<"Listing"> | string
  webId?: Prisma.IntWithAggregatesFilter<"Listing"> | number
  pending?: Prisma.BoolWithAggregatesFilter<"Listing"> | boolean
  proposerId?: Prisma.StringNullableWithAggregatesFilter<"Listing"> | string | null
  featured?: Prisma.BoolWithAggregatesFilter<"Listing"> | boolean
  locationId?: Prisma.IntNullableWithAggregatesFilter<"Listing"> | number | null
}

export type ListingCreateInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingInput
  web?: Prisma.WebCreateNestedOneWithoutListingsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingsInput
  permissions?: Prisma.PermissionCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingCreateNestedManyWithoutRelationsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedListingsInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingInput
  edits?: Prisma.ListingEditCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput
  permissions?: Prisma.PermissionUncheckedCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationsInput
  edits?: Prisma.ListingEditUncheckedCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingInput
}

export type ListingUpdateInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingNestedInput
  web?: Prisma.WebUpdateOneWithoutListingsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingsNestedInput
  permissions?: Prisma.PermissionUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUpdateManyWithoutRelationsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedListingsNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingNestedInput
  edits?: Prisma.ListingEditUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput
  permissions?: Prisma.PermissionUncheckedUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUncheckedUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUncheckedUpdateManyWithoutRelationsNestedInput
  edits?: Prisma.ListingEditUncheckedUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingCreateManyInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
}

export type ListingUpdateManyMutationInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ListingUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type ListingListRelationFilter = {
  every?: Prisma.ListingWhereInput
  some?: Prisma.ListingWhereInput
  none?: Prisma.ListingWhereInput
}

export type ListingOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ListingWebIdSlugCompoundUniqueInput = {
  webId: number
  slug: string
}

export type ListingCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  title?: Prisma.SortOrder
  website?: Prisma.SortOrder
  description?: Prisma.SortOrder
  email?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  inactive?: Prisma.SortOrder
  seekingVolunteers?: Prisma.SortOrder
  categoryId?: Prisma.SortOrder
  image?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  webId?: Prisma.SortOrder
  pending?: Prisma.SortOrder
  proposerId?: Prisma.SortOrder
  featured?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
}

export type ListingAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  categoryId?: Prisma.SortOrder
  webId?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
}

export type ListingMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  title?: Prisma.SortOrder
  website?: Prisma.SortOrder
  description?: Prisma.SortOrder
  email?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  inactive?: Prisma.SortOrder
  seekingVolunteers?: Prisma.SortOrder
  categoryId?: Prisma.SortOrder
  image?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  webId?: Prisma.SortOrder
  pending?: Prisma.SortOrder
  proposerId?: Prisma.SortOrder
  featured?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
}

export type ListingMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  title?: Prisma.SortOrder
  website?: Prisma.SortOrder
  description?: Prisma.SortOrder
  email?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  inactive?: Prisma.SortOrder
  seekingVolunteers?: Prisma.SortOrder
  categoryId?: Prisma.SortOrder
  image?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  webId?: Prisma.SortOrder
  pending?: Prisma.SortOrder
  proposerId?: Prisma.SortOrder
  featured?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
}

export type ListingSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  categoryId?: Prisma.SortOrder
  webId?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
}

export type ListingNullableScalarRelationFilter = {
  is?: Prisma.ListingWhereInput | null
  isNot?: Prisma.ListingWhereInput | null
}

export type ListingScalarRelationFilter = {
  is?: Prisma.ListingWhereInput
  isNot?: Prisma.ListingWhereInput
}

export type ListingCreateNestedManyWithoutProposerInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutProposerInput, Prisma.ListingUncheckedCreateWithoutProposerInput> | Prisma.ListingCreateWithoutProposerInput[] | Prisma.ListingUncheckedCreateWithoutProposerInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutProposerInput | Prisma.ListingCreateOrConnectWithoutProposerInput[]
  createMany?: Prisma.ListingCreateManyProposerInputEnvelope
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUncheckedCreateNestedManyWithoutProposerInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutProposerInput, Prisma.ListingUncheckedCreateWithoutProposerInput> | Prisma.ListingCreateWithoutProposerInput[] | Prisma.ListingUncheckedCreateWithoutProposerInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutProposerInput | Prisma.ListingCreateOrConnectWithoutProposerInput[]
  createMany?: Prisma.ListingCreateManyProposerInputEnvelope
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUpdateManyWithoutProposerNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutProposerInput, Prisma.ListingUncheckedCreateWithoutProposerInput> | Prisma.ListingCreateWithoutProposerInput[] | Prisma.ListingUncheckedCreateWithoutProposerInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutProposerInput | Prisma.ListingCreateOrConnectWithoutProposerInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutProposerInput | Prisma.ListingUpsertWithWhereUniqueWithoutProposerInput[]
  createMany?: Prisma.ListingCreateManyProposerInputEnvelope
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutProposerInput | Prisma.ListingUpdateWithWhereUniqueWithoutProposerInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutProposerInput | Prisma.ListingUpdateManyWithWhereWithoutProposerInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingUncheckedUpdateManyWithoutProposerNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutProposerInput, Prisma.ListingUncheckedCreateWithoutProposerInput> | Prisma.ListingCreateWithoutProposerInput[] | Prisma.ListingUncheckedCreateWithoutProposerInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutProposerInput | Prisma.ListingCreateOrConnectWithoutProposerInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutProposerInput | Prisma.ListingUpsertWithWhereUniqueWithoutProposerInput[]
  createMany?: Prisma.ListingCreateManyProposerInputEnvelope
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutProposerInput | Prisma.ListingUpdateWithWhereUniqueWithoutProposerInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutProposerInput | Prisma.ListingUpdateManyWithWhereWithoutProposerInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingCreateNestedManyWithoutWebInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutWebInput, Prisma.ListingUncheckedCreateWithoutWebInput> | Prisma.ListingCreateWithoutWebInput[] | Prisma.ListingUncheckedCreateWithoutWebInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutWebInput | Prisma.ListingCreateOrConnectWithoutWebInput[]
  createMany?: Prisma.ListingCreateManyWebInputEnvelope
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUncheckedCreateNestedManyWithoutWebInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutWebInput, Prisma.ListingUncheckedCreateWithoutWebInput> | Prisma.ListingCreateWithoutWebInput[] | Prisma.ListingUncheckedCreateWithoutWebInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutWebInput | Prisma.ListingCreateOrConnectWithoutWebInput[]
  createMany?: Prisma.ListingCreateManyWebInputEnvelope
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUpdateManyWithoutWebNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutWebInput, Prisma.ListingUncheckedCreateWithoutWebInput> | Prisma.ListingCreateWithoutWebInput[] | Prisma.ListingUncheckedCreateWithoutWebInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutWebInput | Prisma.ListingCreateOrConnectWithoutWebInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutWebInput | Prisma.ListingUpsertWithWhereUniqueWithoutWebInput[]
  createMany?: Prisma.ListingCreateManyWebInputEnvelope
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutWebInput | Prisma.ListingUpdateWithWhereUniqueWithoutWebInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutWebInput | Prisma.ListingUpdateManyWithWhereWithoutWebInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingUncheckedUpdateManyWithoutWebNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutWebInput, Prisma.ListingUncheckedCreateWithoutWebInput> | Prisma.ListingCreateWithoutWebInput[] | Prisma.ListingUncheckedCreateWithoutWebInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutWebInput | Prisma.ListingCreateOrConnectWithoutWebInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutWebInput | Prisma.ListingUpsertWithWhereUniqueWithoutWebInput[]
  createMany?: Prisma.ListingCreateManyWebInputEnvelope
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutWebInput | Prisma.ListingUpdateWithWhereUniqueWithoutWebInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutWebInput | Prisma.ListingUpdateManyWithWhereWithoutWebInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingCreateNestedManyWithoutCategoryInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutCategoryInput, Prisma.ListingUncheckedCreateWithoutCategoryInput> | Prisma.ListingCreateWithoutCategoryInput[] | Prisma.ListingUncheckedCreateWithoutCategoryInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutCategoryInput | Prisma.ListingCreateOrConnectWithoutCategoryInput[]
  createMany?: Prisma.ListingCreateManyCategoryInputEnvelope
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUncheckedCreateNestedManyWithoutCategoryInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutCategoryInput, Prisma.ListingUncheckedCreateWithoutCategoryInput> | Prisma.ListingCreateWithoutCategoryInput[] | Prisma.ListingUncheckedCreateWithoutCategoryInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutCategoryInput | Prisma.ListingCreateOrConnectWithoutCategoryInput[]
  createMany?: Prisma.ListingCreateManyCategoryInputEnvelope
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUpdateManyWithoutCategoryNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutCategoryInput, Prisma.ListingUncheckedCreateWithoutCategoryInput> | Prisma.ListingCreateWithoutCategoryInput[] | Prisma.ListingUncheckedCreateWithoutCategoryInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutCategoryInput | Prisma.ListingCreateOrConnectWithoutCategoryInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutCategoryInput | Prisma.ListingUpsertWithWhereUniqueWithoutCategoryInput[]
  createMany?: Prisma.ListingCreateManyCategoryInputEnvelope
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutCategoryInput | Prisma.ListingUpdateWithWhereUniqueWithoutCategoryInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutCategoryInput | Prisma.ListingUpdateManyWithWhereWithoutCategoryInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingUncheckedUpdateManyWithoutCategoryNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutCategoryInput, Prisma.ListingUncheckedCreateWithoutCategoryInput> | Prisma.ListingCreateWithoutCategoryInput[] | Prisma.ListingUncheckedCreateWithoutCategoryInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutCategoryInput | Prisma.ListingCreateOrConnectWithoutCategoryInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutCategoryInput | Prisma.ListingUpsertWithWhereUniqueWithoutCategoryInput[]
  createMany?: Prisma.ListingCreateManyCategoryInputEnvelope
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutCategoryInput | Prisma.ListingUpdateWithWhereUniqueWithoutCategoryInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutCategoryInput | Prisma.ListingUpdateManyWithWhereWithoutCategoryInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingCreateNestedManyWithoutTagsInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutTagsInput, Prisma.ListingUncheckedCreateWithoutTagsInput> | Prisma.ListingCreateWithoutTagsInput[] | Prisma.ListingUncheckedCreateWithoutTagsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutTagsInput | Prisma.ListingCreateOrConnectWithoutTagsInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUncheckedCreateNestedManyWithoutTagsInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutTagsInput, Prisma.ListingUncheckedCreateWithoutTagsInput> | Prisma.ListingCreateWithoutTagsInput[] | Prisma.ListingUncheckedCreateWithoutTagsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutTagsInput | Prisma.ListingCreateOrConnectWithoutTagsInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUpdateManyWithoutTagsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutTagsInput, Prisma.ListingUncheckedCreateWithoutTagsInput> | Prisma.ListingCreateWithoutTagsInput[] | Prisma.ListingUncheckedCreateWithoutTagsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutTagsInput | Prisma.ListingCreateOrConnectWithoutTagsInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutTagsInput | Prisma.ListingUpsertWithWhereUniqueWithoutTagsInput[]
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutTagsInput | Prisma.ListingUpdateWithWhereUniqueWithoutTagsInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutTagsInput | Prisma.ListingUpdateManyWithWhereWithoutTagsInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingUncheckedUpdateManyWithoutTagsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutTagsInput, Prisma.ListingUncheckedCreateWithoutTagsInput> | Prisma.ListingCreateWithoutTagsInput[] | Prisma.ListingUncheckedCreateWithoutTagsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutTagsInput | Prisma.ListingCreateOrConnectWithoutTagsInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutTagsInput | Prisma.ListingUpsertWithWhereUniqueWithoutTagsInput[]
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutTagsInput | Prisma.ListingUpdateWithWhereUniqueWithoutTagsInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutTagsInput | Prisma.ListingUpdateManyWithWhereWithoutTagsInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingCreateNestedManyWithoutRelationOfInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutRelationOfInput, Prisma.ListingUncheckedCreateWithoutRelationOfInput> | Prisma.ListingCreateWithoutRelationOfInput[] | Prisma.ListingUncheckedCreateWithoutRelationOfInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutRelationOfInput | Prisma.ListingCreateOrConnectWithoutRelationOfInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingCreateNestedManyWithoutRelationsInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutRelationsInput, Prisma.ListingUncheckedCreateWithoutRelationsInput> | Prisma.ListingCreateWithoutRelationsInput[] | Prisma.ListingUncheckedCreateWithoutRelationsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutRelationsInput | Prisma.ListingCreateOrConnectWithoutRelationsInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUncheckedCreateNestedManyWithoutRelationOfInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutRelationOfInput, Prisma.ListingUncheckedCreateWithoutRelationOfInput> | Prisma.ListingCreateWithoutRelationOfInput[] | Prisma.ListingUncheckedCreateWithoutRelationOfInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutRelationOfInput | Prisma.ListingCreateOrConnectWithoutRelationOfInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUncheckedCreateNestedManyWithoutRelationsInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutRelationsInput, Prisma.ListingUncheckedCreateWithoutRelationsInput> | Prisma.ListingCreateWithoutRelationsInput[] | Prisma.ListingUncheckedCreateWithoutRelationsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutRelationsInput | Prisma.ListingCreateOrConnectWithoutRelationsInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type NullableBoolFieldUpdateOperationsInput = {
  set?: boolean | null
}

export type ListingUpdateManyWithoutRelationOfNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutRelationOfInput, Prisma.ListingUncheckedCreateWithoutRelationOfInput> | Prisma.ListingCreateWithoutRelationOfInput[] | Prisma.ListingUncheckedCreateWithoutRelationOfInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutRelationOfInput | Prisma.ListingCreateOrConnectWithoutRelationOfInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutRelationOfInput | Prisma.ListingUpsertWithWhereUniqueWithoutRelationOfInput[]
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutRelationOfInput | Prisma.ListingUpdateWithWhereUniqueWithoutRelationOfInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutRelationOfInput | Prisma.ListingUpdateManyWithWhereWithoutRelationOfInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingUpdateManyWithoutRelationsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutRelationsInput, Prisma.ListingUncheckedCreateWithoutRelationsInput> | Prisma.ListingCreateWithoutRelationsInput[] | Prisma.ListingUncheckedCreateWithoutRelationsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutRelationsInput | Prisma.ListingCreateOrConnectWithoutRelationsInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutRelationsInput | Prisma.ListingUpsertWithWhereUniqueWithoutRelationsInput[]
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutRelationsInput | Prisma.ListingUpdateWithWhereUniqueWithoutRelationsInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutRelationsInput | Prisma.ListingUpdateManyWithWhereWithoutRelationsInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingUncheckedUpdateManyWithoutRelationOfNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutRelationOfInput, Prisma.ListingUncheckedCreateWithoutRelationOfInput> | Prisma.ListingCreateWithoutRelationOfInput[] | Prisma.ListingUncheckedCreateWithoutRelationOfInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutRelationOfInput | Prisma.ListingCreateOrConnectWithoutRelationOfInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutRelationOfInput | Prisma.ListingUpsertWithWhereUniqueWithoutRelationOfInput[]
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutRelationOfInput | Prisma.ListingUpdateWithWhereUniqueWithoutRelationOfInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutRelationOfInput | Prisma.ListingUpdateManyWithWhereWithoutRelationOfInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingUncheckedUpdateManyWithoutRelationsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutRelationsInput, Prisma.ListingUncheckedCreateWithoutRelationsInput> | Prisma.ListingCreateWithoutRelationsInput[] | Prisma.ListingUncheckedCreateWithoutRelationsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutRelationsInput | Prisma.ListingCreateOrConnectWithoutRelationsInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutRelationsInput | Prisma.ListingUpsertWithWhereUniqueWithoutRelationsInput[]
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutRelationsInput | Prisma.ListingUpdateWithWhereUniqueWithoutRelationsInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutRelationsInput | Prisma.ListingUpdateManyWithWhereWithoutRelationsInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingCreateNestedOneWithoutSocialsInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutSocialsInput, Prisma.ListingUncheckedCreateWithoutSocialsInput>
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutSocialsInput
  connect?: Prisma.ListingWhereUniqueInput
}

export type ListingUpdateOneWithoutSocialsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutSocialsInput, Prisma.ListingUncheckedCreateWithoutSocialsInput>
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutSocialsInput
  upsert?: Prisma.ListingUpsertWithoutSocialsInput
  disconnect?: Prisma.ListingWhereInput | boolean
  delete?: Prisma.ListingWhereInput | boolean
  connect?: Prisma.ListingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ListingUpdateToOneWithWhereWithoutSocialsInput, Prisma.ListingUpdateWithoutSocialsInput>, Prisma.ListingUncheckedUpdateWithoutSocialsInput>
}

export type ListingCreateNestedOneWithoutActionsInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutActionsInput, Prisma.ListingUncheckedCreateWithoutActionsInput>
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutActionsInput
  connect?: Prisma.ListingWhereUniqueInput
}

export type ListingUpdateOneWithoutActionsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutActionsInput, Prisma.ListingUncheckedCreateWithoutActionsInput>
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutActionsInput
  upsert?: Prisma.ListingUpsertWithoutActionsInput
  disconnect?: Prisma.ListingWhereInput | boolean
  delete?: Prisma.ListingWhereInput | boolean
  connect?: Prisma.ListingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ListingUpdateToOneWithWhereWithoutActionsInput, Prisma.ListingUpdateWithoutActionsInput>, Prisma.ListingUncheckedUpdateWithoutActionsInput>
}

export type ListingCreateNestedOneWithoutEditsInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutEditsInput, Prisma.ListingUncheckedCreateWithoutEditsInput>
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutEditsInput
  connect?: Prisma.ListingWhereUniqueInput
}

export type ListingUpdateOneRequiredWithoutEditsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutEditsInput, Prisma.ListingUncheckedCreateWithoutEditsInput>
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutEditsInput
  upsert?: Prisma.ListingUpsertWithoutEditsInput
  connect?: Prisma.ListingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ListingUpdateToOneWithWhereWithoutEditsInput, Prisma.ListingUpdateWithoutEditsInput>, Prisma.ListingUncheckedUpdateWithoutEditsInput>
}

export type ListingCreateNestedOneWithoutLocationInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutLocationInput, Prisma.ListingUncheckedCreateWithoutLocationInput>
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutLocationInput
  connect?: Prisma.ListingWhereUniqueInput
}

export type ListingUncheckedCreateNestedOneWithoutLocationInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutLocationInput, Prisma.ListingUncheckedCreateWithoutLocationInput>
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutLocationInput
  connect?: Prisma.ListingWhereUniqueInput
}

export type ListingUpdateOneWithoutLocationNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutLocationInput, Prisma.ListingUncheckedCreateWithoutLocationInput>
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutLocationInput
  upsert?: Prisma.ListingUpsertWithoutLocationInput
  disconnect?: Prisma.ListingWhereInput | boolean
  delete?: Prisma.ListingWhereInput | boolean
  connect?: Prisma.ListingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ListingUpdateToOneWithWhereWithoutLocationInput, Prisma.ListingUpdateWithoutLocationInput>, Prisma.ListingUncheckedUpdateWithoutLocationInput>
}

export type ListingUncheckedUpdateOneWithoutLocationNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutLocationInput, Prisma.ListingUncheckedCreateWithoutLocationInput>
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutLocationInput
  upsert?: Prisma.ListingUpsertWithoutLocationInput
  disconnect?: Prisma.ListingWhereInput | boolean
  delete?: Prisma.ListingWhereInput | boolean
  connect?: Prisma.ListingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ListingUpdateToOneWithWhereWithoutLocationInput, Prisma.ListingUpdateWithoutLocationInput>, Prisma.ListingUncheckedUpdateWithoutLocationInput>
}

export type ListingCreateNestedManyWithoutPermissionsInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutPermissionsInput, Prisma.ListingUncheckedCreateWithoutPermissionsInput> | Prisma.ListingCreateWithoutPermissionsInput[] | Prisma.ListingUncheckedCreateWithoutPermissionsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutPermissionsInput | Prisma.ListingCreateOrConnectWithoutPermissionsInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUncheckedCreateNestedManyWithoutPermissionsInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutPermissionsInput, Prisma.ListingUncheckedCreateWithoutPermissionsInput> | Prisma.ListingCreateWithoutPermissionsInput[] | Prisma.ListingUncheckedCreateWithoutPermissionsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutPermissionsInput | Prisma.ListingCreateOrConnectWithoutPermissionsInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
}

export type ListingUpdateManyWithoutPermissionsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutPermissionsInput, Prisma.ListingUncheckedCreateWithoutPermissionsInput> | Prisma.ListingCreateWithoutPermissionsInput[] | Prisma.ListingUncheckedCreateWithoutPermissionsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutPermissionsInput | Prisma.ListingCreateOrConnectWithoutPermissionsInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutPermissionsInput | Prisma.ListingUpsertWithWhereUniqueWithoutPermissionsInput[]
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutPermissionsInput | Prisma.ListingUpdateWithWhereUniqueWithoutPermissionsInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutPermissionsInput | Prisma.ListingUpdateManyWithWhereWithoutPermissionsInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingUncheckedUpdateManyWithoutPermissionsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingCreateWithoutPermissionsInput, Prisma.ListingUncheckedCreateWithoutPermissionsInput> | Prisma.ListingCreateWithoutPermissionsInput[] | Prisma.ListingUncheckedCreateWithoutPermissionsInput[]
  connectOrCreate?: Prisma.ListingCreateOrConnectWithoutPermissionsInput | Prisma.ListingCreateOrConnectWithoutPermissionsInput[]
  upsert?: Prisma.ListingUpsertWithWhereUniqueWithoutPermissionsInput | Prisma.ListingUpsertWithWhereUniqueWithoutPermissionsInput[]
  set?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  disconnect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  delete?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  connect?: Prisma.ListingWhereUniqueInput | Prisma.ListingWhereUniqueInput[]
  update?: Prisma.ListingUpdateWithWhereUniqueWithoutPermissionsInput | Prisma.ListingUpdateWithWhereUniqueWithoutPermissionsInput[]
  updateMany?: Prisma.ListingUpdateManyWithWhereWithoutPermissionsInput | Prisma.ListingUpdateManyWithWhereWithoutPermissionsInput[]
  deleteMany?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
}

export type ListingCreateWithoutProposerInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingInput
  web?: Prisma.WebCreateNestedOneWithoutListingsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingsInput
  permissions?: Prisma.PermissionCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingCreateNestedManyWithoutRelationsInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingInput
  edits?: Prisma.ListingEditCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateWithoutProposerInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  featured?: boolean
  locationId?: number | null
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput
  permissions?: Prisma.PermissionUncheckedCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationsInput
  edits?: Prisma.ListingEditUncheckedCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingInput
}

export type ListingCreateOrConnectWithoutProposerInput = {
  where: Prisma.ListingWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingCreateWithoutProposerInput, Prisma.ListingUncheckedCreateWithoutProposerInput>
}

export type ListingCreateManyProposerInputEnvelope = {
  data: Prisma.ListingCreateManyProposerInput | Prisma.ListingCreateManyProposerInput[]
  skipDuplicates?: boolean
}

export type ListingUpsertWithWhereUniqueWithoutProposerInput = {
  where: Prisma.ListingWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingUpdateWithoutProposerInput, Prisma.ListingUncheckedUpdateWithoutProposerInput>
  create: Prisma.XOR<Prisma.ListingCreateWithoutProposerInput, Prisma.ListingUncheckedCreateWithoutProposerInput>
}

export type ListingUpdateWithWhereUniqueWithoutProposerInput = {
  where: Prisma.ListingWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingUpdateWithoutProposerInput, Prisma.ListingUncheckedUpdateWithoutProposerInput>
}

export type ListingUpdateManyWithWhereWithoutProposerInput = {
  where: Prisma.ListingScalarWhereInput
  data: Prisma.XOR<Prisma.ListingUpdateManyMutationInput, Prisma.ListingUncheckedUpdateManyWithoutProposerInput>
}

export type ListingScalarWhereInput = {
  AND?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
  OR?: Prisma.ListingScalarWhereInput[]
  NOT?: Prisma.ListingScalarWhereInput | Prisma.ListingScalarWhereInput[]
  id?: Prisma.IntFilter<"Listing"> | number
  createdAt?: Prisma.DateTimeFilter<"Listing"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Listing"> | Date | string
  title?: Prisma.StringFilter<"Listing"> | string
  website?: Prisma.StringNullableFilter<"Listing"> | string | null
  description?: Prisma.StringNullableFilter<"Listing"> | string | null
  email?: Prisma.StringNullableFilter<"Listing"> | string | null
  notes?: Prisma.StringNullableFilter<"Listing"> | string | null
  inactive?: Prisma.BoolFilter<"Listing"> | boolean
  seekingVolunteers?: Prisma.BoolNullableFilter<"Listing"> | boolean | null
  categoryId?: Prisma.IntNullableFilter<"Listing"> | number | null
  image?: Prisma.StringNullableFilter<"Listing"> | string | null
  slug?: Prisma.StringFilter<"Listing"> | string
  webId?: Prisma.IntFilter<"Listing"> | number
  pending?: Prisma.BoolFilter<"Listing"> | boolean
  proposerId?: Prisma.StringNullableFilter<"Listing"> | string | null
  featured?: Prisma.BoolFilter<"Listing"> | boolean
  locationId?: Prisma.IntNullableFilter<"Listing"> | number | null
}

export type ListingCreateWithoutWebInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingsInput
  permissions?: Prisma.PermissionCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingCreateNestedManyWithoutRelationsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedListingsInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingInput
  edits?: Prisma.ListingEditCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateWithoutWebInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput
  permissions?: Prisma.PermissionUncheckedCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationsInput
  edits?: Prisma.ListingEditUncheckedCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingInput
}

export type ListingCreateOrConnectWithoutWebInput = {
  where: Prisma.ListingWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingCreateWithoutWebInput, Prisma.ListingUncheckedCreateWithoutWebInput>
}

export type ListingCreateManyWebInputEnvelope = {
  data: Prisma.ListingCreateManyWebInput | Prisma.ListingCreateManyWebInput[]
  skipDuplicates?: boolean
}

export type ListingUpsertWithWhereUniqueWithoutWebInput = {
  where: Prisma.ListingWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingUpdateWithoutWebInput, Prisma.ListingUncheckedUpdateWithoutWebInput>
  create: Prisma.XOR<Prisma.ListingCreateWithoutWebInput, Prisma.ListingUncheckedCreateWithoutWebInput>
}

export type ListingUpdateWithWhereUniqueWithoutWebInput = {
  where: Prisma.ListingWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingUpdateWithoutWebInput, Prisma.ListingUncheckedUpdateWithoutWebInput>
}

export type ListingUpdateManyWithWhereWithoutWebInput = {
  where: Prisma.ListingScalarWhereInput
  data: Prisma.XOR<Prisma.ListingUpdateManyMutationInput, Prisma.ListingUncheckedUpdateManyWithoutWebInput>
}

export type ListingCreateWithoutCategoryInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingInput
  web?: Prisma.WebCreateNestedOneWithoutListingsInput
  permissions?: Prisma.PermissionCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingCreateNestedManyWithoutRelationsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedListingsInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingInput
  edits?: Prisma.ListingEditCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateWithoutCategoryInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput
  permissions?: Prisma.PermissionUncheckedCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationsInput
  edits?: Prisma.ListingEditUncheckedCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingInput
}

export type ListingCreateOrConnectWithoutCategoryInput = {
  where: Prisma.ListingWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingCreateWithoutCategoryInput, Prisma.ListingUncheckedCreateWithoutCategoryInput>
}

export type ListingCreateManyCategoryInputEnvelope = {
  data: Prisma.ListingCreateManyCategoryInput | Prisma.ListingCreateManyCategoryInput[]
  skipDuplicates?: boolean
}

export type ListingUpsertWithWhereUniqueWithoutCategoryInput = {
  where: Prisma.ListingWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingUpdateWithoutCategoryInput, Prisma.ListingUncheckedUpdateWithoutCategoryInput>
  create: Prisma.XOR<Prisma.ListingCreateWithoutCategoryInput, Prisma.ListingUncheckedCreateWithoutCategoryInput>
}

export type ListingUpdateWithWhereUniqueWithoutCategoryInput = {
  where: Prisma.ListingWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingUpdateWithoutCategoryInput, Prisma.ListingUncheckedUpdateWithoutCategoryInput>
}

export type ListingUpdateManyWithWhereWithoutCategoryInput = {
  where: Prisma.ListingScalarWhereInput
  data: Prisma.XOR<Prisma.ListingUpdateManyMutationInput, Prisma.ListingUncheckedUpdateManyWithoutCategoryInput>
}

export type ListingCreateWithoutTagsInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingInput
  web?: Prisma.WebCreateNestedOneWithoutListingsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingsInput
  permissions?: Prisma.PermissionCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingCreateNestedManyWithoutRelationsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedListingsInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingInput
  edits?: Prisma.ListingEditCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateWithoutTagsInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput
  permissions?: Prisma.PermissionUncheckedCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationsInput
  edits?: Prisma.ListingEditUncheckedCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingInput
}

export type ListingCreateOrConnectWithoutTagsInput = {
  where: Prisma.ListingWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingCreateWithoutTagsInput, Prisma.ListingUncheckedCreateWithoutTagsInput>
}

export type ListingUpsertWithWhereUniqueWithoutTagsInput = {
  where: Prisma.ListingWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingUpdateWithoutTagsInput, Prisma.ListingUncheckedUpdateWithoutTagsInput>
  create: Prisma.XOR<Prisma.ListingCreateWithoutTagsInput, Prisma.ListingUncheckedCreateWithoutTagsInput>
}

export type ListingUpdateWithWhereUniqueWithoutTagsInput = {
  where: Prisma.ListingWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingUpdateWithoutTagsInput, Prisma.ListingUncheckedUpdateWithoutTagsInput>
}

export type ListingUpdateManyWithWhereWithoutTagsInput = {
  where: Prisma.ListingScalarWhereInput
  data: Prisma.XOR<Prisma.ListingUpdateManyMutationInput, Prisma.ListingUncheckedUpdateManyWithoutTagsInput>
}

export type ListingCreateWithoutRelationOfInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingInput
  web?: Prisma.WebCreateNestedOneWithoutListingsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingsInput
  permissions?: Prisma.PermissionCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingCreateNestedManyWithoutRelationOfInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedListingsInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingInput
  edits?: Prisma.ListingEditCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateWithoutRelationOfInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput
  permissions?: Prisma.PermissionUncheckedCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationOfInput
  edits?: Prisma.ListingEditUncheckedCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingInput
}

export type ListingCreateOrConnectWithoutRelationOfInput = {
  where: Prisma.ListingWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingCreateWithoutRelationOfInput, Prisma.ListingUncheckedCreateWithoutRelationOfInput>
}

export type ListingCreateWithoutRelationsInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingInput
  web?: Prisma.WebCreateNestedOneWithoutListingsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingsInput
  permissions?: Prisma.PermissionCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingsInput
  relationOf?: Prisma.ListingCreateNestedManyWithoutRelationsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedListingsInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingInput
  edits?: Prisma.ListingEditCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateWithoutRelationsInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput
  permissions?: Prisma.PermissionUncheckedCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingsInput
  relationOf?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationsInput
  edits?: Prisma.ListingEditUncheckedCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingInput
}

export type ListingCreateOrConnectWithoutRelationsInput = {
  where: Prisma.ListingWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingCreateWithoutRelationsInput, Prisma.ListingUncheckedCreateWithoutRelationsInput>
}

export type ListingUpsertWithWhereUniqueWithoutRelationOfInput = {
  where: Prisma.ListingWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingUpdateWithoutRelationOfInput, Prisma.ListingUncheckedUpdateWithoutRelationOfInput>
  create: Prisma.XOR<Prisma.ListingCreateWithoutRelationOfInput, Prisma.ListingUncheckedCreateWithoutRelationOfInput>
}

export type ListingUpdateWithWhereUniqueWithoutRelationOfInput = {
  where: Prisma.ListingWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingUpdateWithoutRelationOfInput, Prisma.ListingUncheckedUpdateWithoutRelationOfInput>
}

export type ListingUpdateManyWithWhereWithoutRelationOfInput = {
  where: Prisma.ListingScalarWhereInput
  data: Prisma.XOR<Prisma.ListingUpdateManyMutationInput, Prisma.ListingUncheckedUpdateManyWithoutRelationOfInput>
}

export type ListingUpsertWithWhereUniqueWithoutRelationsInput = {
  where: Prisma.ListingWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingUpdateWithoutRelationsInput, Prisma.ListingUncheckedUpdateWithoutRelationsInput>
  create: Prisma.XOR<Prisma.ListingCreateWithoutRelationsInput, Prisma.ListingUncheckedCreateWithoutRelationsInput>
}

export type ListingUpdateWithWhereUniqueWithoutRelationsInput = {
  where: Prisma.ListingWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingUpdateWithoutRelationsInput, Prisma.ListingUncheckedUpdateWithoutRelationsInput>
}

export type ListingUpdateManyWithWhereWithoutRelationsInput = {
  where: Prisma.ListingScalarWhereInput
  data: Prisma.XOR<Prisma.ListingUpdateManyMutationInput, Prisma.ListingUncheckedUpdateManyWithoutRelationsInput>
}

export type ListingCreateWithoutSocialsInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  web?: Prisma.WebCreateNestedOneWithoutListingsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingsInput
  permissions?: Prisma.PermissionCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingCreateNestedManyWithoutRelationsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedListingsInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingInput
  edits?: Prisma.ListingEditCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateWithoutSocialsInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
  permissions?: Prisma.PermissionUncheckedCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationsInput
  edits?: Prisma.ListingEditUncheckedCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingInput
}

export type ListingCreateOrConnectWithoutSocialsInput = {
  where: Prisma.ListingWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingCreateWithoutSocialsInput, Prisma.ListingUncheckedCreateWithoutSocialsInput>
}

export type ListingUpsertWithoutSocialsInput = {
  update: Prisma.XOR<Prisma.ListingUpdateWithoutSocialsInput, Prisma.ListingUncheckedUpdateWithoutSocialsInput>
  create: Prisma.XOR<Prisma.ListingCreateWithoutSocialsInput, Prisma.ListingUncheckedCreateWithoutSocialsInput>
  where?: Prisma.ListingWhereInput
}

export type ListingUpdateToOneWithWhereWithoutSocialsInput = {
  where?: Prisma.ListingWhereInput
  data: Prisma.XOR<Prisma.ListingUpdateWithoutSocialsInput, Prisma.ListingUncheckedUpdateWithoutSocialsInput>
}

export type ListingUpdateWithoutSocialsInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  web?: Prisma.WebUpdateOneWithoutListingsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingsNestedInput
  permissions?: Prisma.PermissionUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUpdateManyWithoutRelationsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedListingsNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingNestedInput
  edits?: Prisma.ListingEditUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateWithoutSocialsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  permissions?: Prisma.PermissionUncheckedUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUncheckedUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUncheckedUpdateManyWithoutRelationsNestedInput
  edits?: Prisma.ListingEditUncheckedUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingCreateWithoutActionsInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingInput
  web?: Prisma.WebCreateNestedOneWithoutListingsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingsInput
  permissions?: Prisma.PermissionCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingCreateNestedManyWithoutRelationsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedListingsInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingInput
  edits?: Prisma.ListingEditCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateWithoutActionsInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput
  permissions?: Prisma.PermissionUncheckedCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationsInput
  edits?: Prisma.ListingEditUncheckedCreateNestedManyWithoutListingInput
}

export type ListingCreateOrConnectWithoutActionsInput = {
  where: Prisma.ListingWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingCreateWithoutActionsInput, Prisma.ListingUncheckedCreateWithoutActionsInput>
}

export type ListingUpsertWithoutActionsInput = {
  update: Prisma.XOR<Prisma.ListingUpdateWithoutActionsInput, Prisma.ListingUncheckedUpdateWithoutActionsInput>
  create: Prisma.XOR<Prisma.ListingCreateWithoutActionsInput, Prisma.ListingUncheckedCreateWithoutActionsInput>
  where?: Prisma.ListingWhereInput
}

export type ListingUpdateToOneWithWhereWithoutActionsInput = {
  where?: Prisma.ListingWhereInput
  data: Prisma.XOR<Prisma.ListingUpdateWithoutActionsInput, Prisma.ListingUncheckedUpdateWithoutActionsInput>
}

export type ListingUpdateWithoutActionsInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingNestedInput
  web?: Prisma.WebUpdateOneWithoutListingsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingsNestedInput
  permissions?: Prisma.PermissionUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUpdateManyWithoutRelationsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedListingsNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingNestedInput
  edits?: Prisma.ListingEditUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateWithoutActionsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput
  permissions?: Prisma.PermissionUncheckedUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUncheckedUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUncheckedUpdateManyWithoutRelationsNestedInput
  edits?: Prisma.ListingEditUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingCreateWithoutEditsInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingInput
  web?: Prisma.WebCreateNestedOneWithoutListingsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingsInput
  permissions?: Prisma.PermissionCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingCreateNestedManyWithoutRelationsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedListingsInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateWithoutEditsInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput
  permissions?: Prisma.PermissionUncheckedCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationsInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingInput
}

export type ListingCreateOrConnectWithoutEditsInput = {
  where: Prisma.ListingWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingCreateWithoutEditsInput, Prisma.ListingUncheckedCreateWithoutEditsInput>
}

export type ListingUpsertWithoutEditsInput = {
  update: Prisma.XOR<Prisma.ListingUpdateWithoutEditsInput, Prisma.ListingUncheckedUpdateWithoutEditsInput>
  create: Prisma.XOR<Prisma.ListingCreateWithoutEditsInput, Prisma.ListingUncheckedCreateWithoutEditsInput>
  where?: Prisma.ListingWhereInput
}

export type ListingUpdateToOneWithWhereWithoutEditsInput = {
  where?: Prisma.ListingWhereInput
  data: Prisma.XOR<Prisma.ListingUpdateWithoutEditsInput, Prisma.ListingUncheckedUpdateWithoutEditsInput>
}

export type ListingUpdateWithoutEditsInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingNestedInput
  web?: Prisma.WebUpdateOneWithoutListingsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingsNestedInput
  permissions?: Prisma.PermissionUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUpdateManyWithoutRelationsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedListingsNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateWithoutEditsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput
  permissions?: Prisma.PermissionUncheckedUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUncheckedUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUncheckedUpdateManyWithoutRelationsNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingCreateWithoutLocationInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingInput
  web?: Prisma.WebCreateNestedOneWithoutListingsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingsInput
  permissions?: Prisma.PermissionCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingCreateNestedManyWithoutRelationsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedListingsInput
  edits?: Prisma.ListingEditCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateWithoutLocationInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput
  permissions?: Prisma.PermissionUncheckedCreateNestedManyWithoutListingsInput
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationsInput
  edits?: Prisma.ListingEditUncheckedCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingInput
}

export type ListingCreateOrConnectWithoutLocationInput = {
  where: Prisma.ListingWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingCreateWithoutLocationInput, Prisma.ListingUncheckedCreateWithoutLocationInput>
}

export type ListingUpsertWithoutLocationInput = {
  update: Prisma.XOR<Prisma.ListingUpdateWithoutLocationInput, Prisma.ListingUncheckedUpdateWithoutLocationInput>
  create: Prisma.XOR<Prisma.ListingCreateWithoutLocationInput, Prisma.ListingUncheckedCreateWithoutLocationInput>
  where?: Prisma.ListingWhereInput
}

export type ListingUpdateToOneWithWhereWithoutLocationInput = {
  where?: Prisma.ListingWhereInput
  data: Prisma.XOR<Prisma.ListingUpdateWithoutLocationInput, Prisma.ListingUncheckedUpdateWithoutLocationInput>
}

export type ListingUpdateWithoutLocationInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingNestedInput
  web?: Prisma.WebUpdateOneWithoutListingsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingsNestedInput
  permissions?: Prisma.PermissionUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUpdateManyWithoutRelationsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedListingsNestedInput
  edits?: Prisma.ListingEditUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateWithoutLocationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput
  permissions?: Prisma.PermissionUncheckedUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUncheckedUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUncheckedUpdateManyWithoutRelationsNestedInput
  edits?: Prisma.ListingEditUncheckedUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingCreateWithoutPermissionsInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  pending?: boolean
  featured?: boolean
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingInput
  web?: Prisma.WebCreateNestedOneWithoutListingsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingCreateNestedManyWithoutRelationsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedListingsInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingInput
  edits?: Prisma.ListingEditCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingInput
}

export type ListingUncheckedCreateWithoutPermissionsInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingsInput
  relations?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationOfInput
  relationOf?: Prisma.ListingUncheckedCreateNestedManyWithoutRelationsInput
  edits?: Prisma.ListingEditUncheckedCreateNestedManyWithoutListingInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingInput
}

export type ListingCreateOrConnectWithoutPermissionsInput = {
  where: Prisma.ListingWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingCreateWithoutPermissionsInput, Prisma.ListingUncheckedCreateWithoutPermissionsInput>
}

export type ListingUpsertWithWhereUniqueWithoutPermissionsInput = {
  where: Prisma.ListingWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingUpdateWithoutPermissionsInput, Prisma.ListingUncheckedUpdateWithoutPermissionsInput>
  create: Prisma.XOR<Prisma.ListingCreateWithoutPermissionsInput, Prisma.ListingUncheckedCreateWithoutPermissionsInput>
}

export type ListingUpdateWithWhereUniqueWithoutPermissionsInput = {
  where: Prisma.ListingWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingUpdateWithoutPermissionsInput, Prisma.ListingUncheckedUpdateWithoutPermissionsInput>
}

export type ListingUpdateManyWithWhereWithoutPermissionsInput = {
  where: Prisma.ListingScalarWhereInput
  data: Prisma.XOR<Prisma.ListingUpdateManyMutationInput, Prisma.ListingUncheckedUpdateManyWithoutPermissionsInput>
}

export type ListingCreateManyProposerInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  featured?: boolean
  locationId?: number | null
}

export type ListingUpdateWithoutProposerInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingNestedInput
  web?: Prisma.WebUpdateOneWithoutListingsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingsNestedInput
  permissions?: Prisma.PermissionUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUpdateManyWithoutRelationsNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingNestedInput
  edits?: Prisma.ListingEditUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateWithoutProposerInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput
  permissions?: Prisma.PermissionUncheckedUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUncheckedUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUncheckedUpdateManyWithoutRelationsNestedInput
  edits?: Prisma.ListingEditUncheckedUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateManyWithoutProposerInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type ListingCreateManyWebInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  categoryId?: number | null
  image?: string | null
  slug: string
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
}

export type ListingUpdateWithoutWebInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingsNestedInput
  permissions?: Prisma.PermissionUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUpdateManyWithoutRelationsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedListingsNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingNestedInput
  edits?: Prisma.ListingEditUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateWithoutWebInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput
  permissions?: Prisma.PermissionUncheckedUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUncheckedUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUncheckedUpdateManyWithoutRelationsNestedInput
  edits?: Prisma.ListingEditUncheckedUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateManyWithoutWebInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type ListingCreateManyCategoryInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title: string
  website?: string | null
  description?: string | null
  email?: string | null
  notes?: string | null
  inactive?: boolean
  seekingVolunteers?: boolean | null
  image?: string | null
  slug: string
  webId: number
  pending?: boolean
  proposerId?: string | null
  featured?: boolean
  locationId?: number | null
}

export type ListingUpdateWithoutCategoryInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingNestedInput
  web?: Prisma.WebUpdateOneWithoutListingsNestedInput
  permissions?: Prisma.PermissionUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUpdateManyWithoutRelationsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedListingsNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingNestedInput
  edits?: Prisma.ListingEditUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateWithoutCategoryInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput
  permissions?: Prisma.PermissionUncheckedUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUncheckedUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUncheckedUpdateManyWithoutRelationsNestedInput
  edits?: Prisma.ListingEditUncheckedUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateManyWithoutCategoryInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type ListingUpdateWithoutTagsInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingNestedInput
  web?: Prisma.WebUpdateOneWithoutListingsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingsNestedInput
  permissions?: Prisma.PermissionUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUpdateManyWithoutRelationsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedListingsNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingNestedInput
  edits?: Prisma.ListingEditUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateWithoutTagsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput
  permissions?: Prisma.PermissionUncheckedUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUncheckedUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUncheckedUpdateManyWithoutRelationsNestedInput
  edits?: Prisma.ListingEditUncheckedUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateManyWithoutTagsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type ListingUpdateWithoutRelationOfInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingNestedInput
  web?: Prisma.WebUpdateOneWithoutListingsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingsNestedInput
  permissions?: Prisma.PermissionUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUpdateManyWithoutRelationOfNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedListingsNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingNestedInput
  edits?: Prisma.ListingEditUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateWithoutRelationOfInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput
  permissions?: Prisma.PermissionUncheckedUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUncheckedUpdateManyWithoutRelationOfNestedInput
  edits?: Prisma.ListingEditUncheckedUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateManyWithoutRelationOfInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type ListingUpdateWithoutRelationsInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingNestedInput
  web?: Prisma.WebUpdateOneWithoutListingsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingsNestedInput
  permissions?: Prisma.PermissionUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingsNestedInput
  relationOf?: Prisma.ListingUpdateManyWithoutRelationsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedListingsNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingNestedInput
  edits?: Prisma.ListingEditUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateWithoutRelationsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput
  permissions?: Prisma.PermissionUncheckedUpdateManyWithoutListingsNestedInput
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingsNestedInput
  relationOf?: Prisma.ListingUncheckedUpdateManyWithoutRelationsNestedInput
  edits?: Prisma.ListingEditUncheckedUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateManyWithoutRelationsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type ListingUpdateWithoutPermissionsInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingNestedInput
  web?: Prisma.WebUpdateOneWithoutListingsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUpdateManyWithoutRelationsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedListingsNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingNestedInput
  edits?: Prisma.ListingEditUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateWithoutPermissionsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingsNestedInput
  relations?: Prisma.ListingUncheckedUpdateManyWithoutRelationOfNestedInput
  relationOf?: Prisma.ListingUncheckedUpdateManyWithoutRelationsNestedInput
  edits?: Prisma.ListingEditUncheckedUpdateManyWithoutListingNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingNestedInput
}

export type ListingUncheckedUpdateManyWithoutPermissionsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  seekingVolunteers?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  webId?: Prisma.IntFieldUpdateOperationsInput | number
  pending?: Prisma.BoolFieldUpdateOperationsInput | boolean
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  featured?: Prisma.BoolFieldUpdateOperationsInput | boolean
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}


/**
 * Count Type ListingCountOutputType
 */

export type ListingCountOutputType = {
  socials: number
  permissions: number
  tags: number
  relations: number
  relationOf: number
  edits: number
  actions: number
}

export type ListingCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  socials?: boolean | ListingCountOutputTypeCountSocialsArgs
  permissions?: boolean | ListingCountOutputTypeCountPermissionsArgs
  tags?: boolean | ListingCountOutputTypeCountTagsArgs
  relations?: boolean | ListingCountOutputTypeCountRelationsArgs
  relationOf?: boolean | ListingCountOutputTypeCountRelationOfArgs
  edits?: boolean | ListingCountOutputTypeCountEditsArgs
  actions?: boolean | ListingCountOutputTypeCountActionsArgs
}

/**
 * ListingCountOutputType without action
 */
export type ListingCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingCountOutputType
   */
  select?: Prisma.ListingCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ListingCountOutputType without action
 */
export type ListingCountOutputTypeCountSocialsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ListingSocialMediaWhereInput
}

/**
 * ListingCountOutputType without action
 */
export type ListingCountOutputTypeCountPermissionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PermissionWhereInput
}

/**
 * ListingCountOutputType without action
 */
export type ListingCountOutputTypeCountTagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TagWhereInput
}

/**
 * ListingCountOutputType without action
 */
export type ListingCountOutputTypeCountRelationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ListingWhereInput
}

/**
 * ListingCountOutputType without action
 */
export type ListingCountOutputTypeCountRelationOfArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ListingWhereInput
}

/**
 * ListingCountOutputType without action
 */
export type ListingCountOutputTypeCountEditsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ListingEditWhereInput
}

/**
 * ListingCountOutputType without action
 */
export type ListingCountOutputTypeCountActionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ListingActionWhereInput
}


export type ListingSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  title?: boolean
  website?: boolean
  description?: boolean
  email?: boolean
  notes?: boolean
  inactive?: boolean
  seekingVolunteers?: boolean
  categoryId?: boolean
  image?: boolean
  slug?: boolean
  webId?: boolean
  pending?: boolean
  proposerId?: boolean
  featured?: boolean
  locationId?: boolean
  socials?: boolean | Prisma.Listing$socialsArgs<ExtArgs>
  web?: boolean | Prisma.Listing$webArgs<ExtArgs>
  category?: boolean | Prisma.Listing$categoryArgs<ExtArgs>
  permissions?: boolean | Prisma.Listing$permissionsArgs<ExtArgs>
  tags?: boolean | Prisma.Listing$tagsArgs<ExtArgs>
  relations?: boolean | Prisma.Listing$relationsArgs<ExtArgs>
  relationOf?: boolean | Prisma.Listing$relationOfArgs<ExtArgs>
  proposer?: boolean | Prisma.Listing$proposerArgs<ExtArgs>
  location?: boolean | Prisma.Listing$locationArgs<ExtArgs>
  edits?: boolean | Prisma.Listing$editsArgs<ExtArgs>
  actions?: boolean | Prisma.Listing$actionsArgs<ExtArgs>
  _count?: boolean | Prisma.ListingCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["listing"]>

export type ListingSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  title?: boolean
  website?: boolean
  description?: boolean
  email?: boolean
  notes?: boolean
  inactive?: boolean
  seekingVolunteers?: boolean
  categoryId?: boolean
  image?: boolean
  slug?: boolean
  webId?: boolean
  pending?: boolean
  proposerId?: boolean
  featured?: boolean
  locationId?: boolean
  web?: boolean | Prisma.Listing$webArgs<ExtArgs>
  category?: boolean | Prisma.Listing$categoryArgs<ExtArgs>
  proposer?: boolean | Prisma.Listing$proposerArgs<ExtArgs>
  location?: boolean | Prisma.Listing$locationArgs<ExtArgs>
}, ExtArgs["result"]["listing"]>

export type ListingSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  title?: boolean
  website?: boolean
  description?: boolean
  email?: boolean
  notes?: boolean
  inactive?: boolean
  seekingVolunteers?: boolean
  categoryId?: boolean
  image?: boolean
  slug?: boolean
  webId?: boolean
  pending?: boolean
  proposerId?: boolean
  featured?: boolean
  locationId?: boolean
  web?: boolean | Prisma.Listing$webArgs<ExtArgs>
  category?: boolean | Prisma.Listing$categoryArgs<ExtArgs>
  proposer?: boolean | Prisma.Listing$proposerArgs<ExtArgs>
  location?: boolean | Prisma.Listing$locationArgs<ExtArgs>
}, ExtArgs["result"]["listing"]>

export type ListingSelectScalar = {
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  title?: boolean
  website?: boolean
  description?: boolean
  email?: boolean
  notes?: boolean
  inactive?: boolean
  seekingVolunteers?: boolean
  categoryId?: boolean
  image?: boolean
  slug?: boolean
  webId?: boolean
  pending?: boolean
  proposerId?: boolean
  featured?: boolean
  locationId?: boolean
}

export type ListingOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "title" | "website" | "description" | "email" | "notes" | "inactive" | "seekingVolunteers" | "categoryId" | "image" | "slug" | "webId" | "pending" | "proposerId" | "featured" | "locationId", ExtArgs["result"]["listing"]>
export type ListingInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  socials?: boolean | Prisma.Listing$socialsArgs<ExtArgs>
  web?: boolean | Prisma.Listing$webArgs<ExtArgs>
  category?: boolean | Prisma.Listing$categoryArgs<ExtArgs>
  permissions?: boolean | Prisma.Listing$permissionsArgs<ExtArgs>
  tags?: boolean | Prisma.Listing$tagsArgs<ExtArgs>
  relations?: boolean | Prisma.Listing$relationsArgs<ExtArgs>
  relationOf?: boolean | Prisma.Listing$relationOfArgs<ExtArgs>
  proposer?: boolean | Prisma.Listing$proposerArgs<ExtArgs>
  location?: boolean | Prisma.Listing$locationArgs<ExtArgs>
  edits?: boolean | Prisma.Listing$editsArgs<ExtArgs>
  actions?: boolean | Prisma.Listing$actionsArgs<ExtArgs>
  _count?: boolean | Prisma.ListingCountOutputTypeDefaultArgs<ExtArgs>
}
export type ListingIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  web?: boolean | Prisma.Listing$webArgs<ExtArgs>
  category?: boolean | Prisma.Listing$categoryArgs<ExtArgs>
  proposer?: boolean | Prisma.Listing$proposerArgs<ExtArgs>
  location?: boolean | Prisma.Listing$locationArgs<ExtArgs>
}
export type ListingIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  web?: boolean | Prisma.Listing$webArgs<ExtArgs>
  category?: boolean | Prisma.Listing$categoryArgs<ExtArgs>
  proposer?: boolean | Prisma.Listing$proposerArgs<ExtArgs>
  location?: boolean | Prisma.Listing$locationArgs<ExtArgs>
}

export type $ListingPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Listing"
  objects: {
    socials: Prisma.$ListingSocialMediaPayload<ExtArgs>[]
    web: Prisma.$WebPayload<ExtArgs> | null
    category: Prisma.$CategoryPayload<ExtArgs> | null
    permissions: Prisma.$PermissionPayload<ExtArgs>[]
    tags: Prisma.$TagPayload<ExtArgs>[]
    relations: Prisma.$ListingPayload<ExtArgs>[]
    relationOf: Prisma.$ListingPayload<ExtArgs>[]
    proposer: Prisma.$UserPayload<ExtArgs> | null
    location: Prisma.$ListingLocationPayload<ExtArgs> | null
    edits: Prisma.$ListingEditPayload<ExtArgs>[]
    actions: Prisma.$ListingActionPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    createdAt: Date
    updatedAt: Date
    title: string
    website: string | null
    description: string | null
    email: string | null
    notes: string | null
    inactive: boolean
    seekingVolunteers: boolean | null
    categoryId: number | null
    image: string | null
    slug: string
    webId: number
    pending: boolean
    proposerId: string | null
    featured: boolean
    locationId: number | null
  }, ExtArgs["result"]["listing"]>
  composites: {}
}

export type ListingGetPayload<S extends boolean | null | undefined | ListingDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ListingPayload, S>

export type ListingCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ListingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ListingCountAggregateInputType | true
  }

export interface ListingDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Listing'], meta: { name: 'Listing' } }
  /**
   * Find zero or one Listing that matches the filter.
   * @param {ListingFindUniqueArgs} args - Arguments to find a Listing
   * @example
   * // Get one Listing
   * const listing = await prisma.listing.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ListingFindUniqueArgs>(args: Prisma.SelectSubset<T, ListingFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ListingClient<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Listing that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ListingFindUniqueOrThrowArgs} args - Arguments to find a Listing
   * @example
   * // Get one Listing
   * const listing = await prisma.listing.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ListingFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ListingFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ListingClient<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Listing that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingFindFirstArgs} args - Arguments to find a Listing
   * @example
   * // Get one Listing
   * const listing = await prisma.listing.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ListingFindFirstArgs>(args?: Prisma.SelectSubset<T, ListingFindFirstArgs<ExtArgs>>): Prisma.Prisma__ListingClient<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Listing that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingFindFirstOrThrowArgs} args - Arguments to find a Listing
   * @example
   * // Get one Listing
   * const listing = await prisma.listing.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ListingFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ListingFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ListingClient<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Listings that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Listings
   * const listings = await prisma.listing.findMany()
   * 
   * // Get first 10 Listings
   * const listings = await prisma.listing.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const listingWithIdOnly = await prisma.listing.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ListingFindManyArgs>(args?: Prisma.SelectSubset<T, ListingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Listing.
   * @param {ListingCreateArgs} args - Arguments to create a Listing.
   * @example
   * // Create one Listing
   * const Listing = await prisma.listing.create({
   *   data: {
   *     // ... data to create a Listing
   *   }
   * })
   * 
   */
  create<T extends ListingCreateArgs>(args: Prisma.SelectSubset<T, ListingCreateArgs<ExtArgs>>): Prisma.Prisma__ListingClient<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Listings.
   * @param {ListingCreateManyArgs} args - Arguments to create many Listings.
   * @example
   * // Create many Listings
   * const listing = await prisma.listing.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ListingCreateManyArgs>(args?: Prisma.SelectSubset<T, ListingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Listings and returns the data saved in the database.
   * @param {ListingCreateManyAndReturnArgs} args - Arguments to create many Listings.
   * @example
   * // Create many Listings
   * const listing = await prisma.listing.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Listings and only return the `id`
   * const listingWithIdOnly = await prisma.listing.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ListingCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ListingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Listing.
   * @param {ListingDeleteArgs} args - Arguments to delete one Listing.
   * @example
   * // Delete one Listing
   * const Listing = await prisma.listing.delete({
   *   where: {
   *     // ... filter to delete one Listing
   *   }
   * })
   * 
   */
  delete<T extends ListingDeleteArgs>(args: Prisma.SelectSubset<T, ListingDeleteArgs<ExtArgs>>): Prisma.Prisma__ListingClient<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Listing.
   * @param {ListingUpdateArgs} args - Arguments to update one Listing.
   * @example
   * // Update one Listing
   * const listing = await prisma.listing.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ListingUpdateArgs>(args: Prisma.SelectSubset<T, ListingUpdateArgs<ExtArgs>>): Prisma.Prisma__ListingClient<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Listings.
   * @param {ListingDeleteManyArgs} args - Arguments to filter Listings to delete.
   * @example
   * // Delete a few Listings
   * const { count } = await prisma.listing.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ListingDeleteManyArgs>(args?: Prisma.SelectSubset<T, ListingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Listings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Listings
   * const listing = await prisma.listing.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ListingUpdateManyArgs>(args: Prisma.SelectSubset<T, ListingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Listings and returns the data updated in the database.
   * @param {ListingUpdateManyAndReturnArgs} args - Arguments to update many Listings.
   * @example
   * // Update many Listings
   * const listing = await prisma.listing.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Listings and only return the `id`
   * const listingWithIdOnly = await prisma.listing.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ListingUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ListingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Listing.
   * @param {ListingUpsertArgs} args - Arguments to update or create a Listing.
   * @example
   * // Update or create a Listing
   * const listing = await prisma.listing.upsert({
   *   create: {
   *     // ... data to create a Listing
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Listing we want to update
   *   }
   * })
   */
  upsert<T extends ListingUpsertArgs>(args: Prisma.SelectSubset<T, ListingUpsertArgs<ExtArgs>>): Prisma.Prisma__ListingClient<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Listings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingCountArgs} args - Arguments to filter Listings to count.
   * @example
   * // Count the number of Listings
   * const count = await prisma.listing.count({
   *   where: {
   *     // ... the filter for the Listings we want to count
   *   }
   * })
  **/
  count<T extends ListingCountArgs>(
    args?: Prisma.Subset<T, ListingCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ListingCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Listing.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ListingAggregateArgs>(args: Prisma.Subset<T, ListingAggregateArgs>): Prisma.PrismaPromise<GetListingAggregateType<T>>

  /**
   * Group by Listing.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ListingGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ListingGroupByArgs['orderBy'] }
      : { orderBy?: ListingGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ListingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Listing model
 */
readonly fields: ListingFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Listing.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ListingClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  socials<T extends Prisma.Listing$socialsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Listing$socialsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  web<T extends Prisma.Listing$webArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Listing$webArgs<ExtArgs>>): Prisma.Prisma__WebClient<runtime.Types.Result.GetResult<Prisma.$WebPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  category<T extends Prisma.Listing$categoryArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Listing$categoryArgs<ExtArgs>>): Prisma.Prisma__CategoryClient<runtime.Types.Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  permissions<T extends Prisma.Listing$permissionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Listing$permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  tags<T extends Prisma.Listing$tagsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Listing$tagsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  relations<T extends Prisma.Listing$relationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Listing$relationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  relationOf<T extends Prisma.Listing$relationOfArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Listing$relationOfArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  proposer<T extends Prisma.Listing$proposerArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Listing$proposerArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  location<T extends Prisma.Listing$locationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Listing$locationArgs<ExtArgs>>): Prisma.Prisma__ListingLocationClient<runtime.Types.Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  edits<T extends Prisma.Listing$editsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Listing$editsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  actions<T extends Prisma.Listing$actionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Listing$actionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingActionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Listing model
 */
export interface ListingFieldRefs {
  readonly id: Prisma.FieldRef<"Listing", 'Int'>
  readonly createdAt: Prisma.FieldRef<"Listing", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Listing", 'DateTime'>
  readonly title: Prisma.FieldRef<"Listing", 'String'>
  readonly website: Prisma.FieldRef<"Listing", 'String'>
  readonly description: Prisma.FieldRef<"Listing", 'String'>
  readonly email: Prisma.FieldRef<"Listing", 'String'>
  readonly notes: Prisma.FieldRef<"Listing", 'String'>
  readonly inactive: Prisma.FieldRef<"Listing", 'Boolean'>
  readonly seekingVolunteers: Prisma.FieldRef<"Listing", 'Boolean'>
  readonly categoryId: Prisma.FieldRef<"Listing", 'Int'>
  readonly image: Prisma.FieldRef<"Listing", 'String'>
  readonly slug: Prisma.FieldRef<"Listing", 'String'>
  readonly webId: Prisma.FieldRef<"Listing", 'Int'>
  readonly pending: Prisma.FieldRef<"Listing", 'Boolean'>
  readonly proposerId: Prisma.FieldRef<"Listing", 'String'>
  readonly featured: Prisma.FieldRef<"Listing", 'Boolean'>
  readonly locationId: Prisma.FieldRef<"Listing", 'Int'>
}
    

// Custom InputTypes
/**
 * Listing findUnique
 */
export type ListingFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  /**
   * Filter, which Listing to fetch.
   */
  where: Prisma.ListingWhereUniqueInput
}

/**
 * Listing findUniqueOrThrow
 */
export type ListingFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  /**
   * Filter, which Listing to fetch.
   */
  where: Prisma.ListingWhereUniqueInput
}

/**
 * Listing findFirst
 */
export type ListingFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  /**
   * Filter, which Listing to fetch.
   */
  where?: Prisma.ListingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Listings to fetch.
   */
  orderBy?: Prisma.ListingOrderByWithRelationInput | Prisma.ListingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Listings.
   */
  cursor?: Prisma.ListingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Listings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Listings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Listings.
   */
  distinct?: Prisma.ListingScalarFieldEnum | Prisma.ListingScalarFieldEnum[]
}

/**
 * Listing findFirstOrThrow
 */
export type ListingFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  /**
   * Filter, which Listing to fetch.
   */
  where?: Prisma.ListingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Listings to fetch.
   */
  orderBy?: Prisma.ListingOrderByWithRelationInput | Prisma.ListingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Listings.
   */
  cursor?: Prisma.ListingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Listings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Listings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Listings.
   */
  distinct?: Prisma.ListingScalarFieldEnum | Prisma.ListingScalarFieldEnum[]
}

/**
 * Listing findMany
 */
export type ListingFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  /**
   * Filter, which Listings to fetch.
   */
  where?: Prisma.ListingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Listings to fetch.
   */
  orderBy?: Prisma.ListingOrderByWithRelationInput | Prisma.ListingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Listings.
   */
  cursor?: Prisma.ListingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Listings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Listings.
   */
  skip?: number
  distinct?: Prisma.ListingScalarFieldEnum | Prisma.ListingScalarFieldEnum[]
}

/**
 * Listing create
 */
export type ListingCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  /**
   * The data needed to create a Listing.
   */
  data: Prisma.XOR<Prisma.ListingCreateInput, Prisma.ListingUncheckedCreateInput>
}

/**
 * Listing createMany
 */
export type ListingCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Listings.
   */
  data: Prisma.ListingCreateManyInput | Prisma.ListingCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Listing createManyAndReturn
 */
export type ListingCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * The data used to create many Listings.
   */
  data: Prisma.ListingCreateManyInput | Prisma.ListingCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Listing update
 */
export type ListingUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  /**
   * The data needed to update a Listing.
   */
  data: Prisma.XOR<Prisma.ListingUpdateInput, Prisma.ListingUncheckedUpdateInput>
  /**
   * Choose, which Listing to update.
   */
  where: Prisma.ListingWhereUniqueInput
}

/**
 * Listing updateMany
 */
export type ListingUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Listings.
   */
  data: Prisma.XOR<Prisma.ListingUpdateManyMutationInput, Prisma.ListingUncheckedUpdateManyInput>
  /**
   * Filter which Listings to update
   */
  where?: Prisma.ListingWhereInput
  /**
   * Limit how many Listings to update.
   */
  limit?: number
}

/**
 * Listing updateManyAndReturn
 */
export type ListingUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * The data used to update Listings.
   */
  data: Prisma.XOR<Prisma.ListingUpdateManyMutationInput, Prisma.ListingUncheckedUpdateManyInput>
  /**
   * Filter which Listings to update
   */
  where?: Prisma.ListingWhereInput
  /**
   * Limit how many Listings to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Listing upsert
 */
export type ListingUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  /**
   * The filter to search for the Listing to update in case it exists.
   */
  where: Prisma.ListingWhereUniqueInput
  /**
   * In case the Listing found by the `where` argument doesn't exist, create a new Listing with this data.
   */
  create: Prisma.XOR<Prisma.ListingCreateInput, Prisma.ListingUncheckedCreateInput>
  /**
   * In case the Listing was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ListingUpdateInput, Prisma.ListingUncheckedUpdateInput>
}

/**
 * Listing delete
 */
export type ListingDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  /**
   * Filter which Listing to delete.
   */
  where: Prisma.ListingWhereUniqueInput
}

/**
 * Listing deleteMany
 */
export type ListingDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Listings to delete
   */
  where?: Prisma.ListingWhereInput
  /**
   * Limit how many Listings to delete.
   */
  limit?: number
}

/**
 * Listing.socials
 */
export type Listing$socialsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
  where?: Prisma.ListingSocialMediaWhereInput
  orderBy?: Prisma.ListingSocialMediaOrderByWithRelationInput | Prisma.ListingSocialMediaOrderByWithRelationInput[]
  cursor?: Prisma.ListingSocialMediaWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ListingSocialMediaScalarFieldEnum | Prisma.ListingSocialMediaScalarFieldEnum[]
}

/**
 * Listing.web
 */
export type Listing$webArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Web
   */
  select?: Prisma.WebSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Web
   */
  omit?: Prisma.WebOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebInclude<ExtArgs> | null
  where?: Prisma.WebWhereInput
}

/**
 * Listing.category
 */
export type Listing$categoryArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Category
   */
  select?: Prisma.CategorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Category
   */
  omit?: Prisma.CategoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CategoryInclude<ExtArgs> | null
  where?: Prisma.CategoryWhereInput
}

/**
 * Listing.permissions
 */
export type Listing$permissionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Permission
   */
  select?: Prisma.PermissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Permission
   */
  omit?: Prisma.PermissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PermissionInclude<ExtArgs> | null
  where?: Prisma.PermissionWhereInput
  orderBy?: Prisma.PermissionOrderByWithRelationInput | Prisma.PermissionOrderByWithRelationInput[]
  cursor?: Prisma.PermissionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PermissionScalarFieldEnum | Prisma.PermissionScalarFieldEnum[]
}

/**
 * Listing.tags
 */
export type Listing$tagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tag
   */
  select?: Prisma.TagSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tag
   */
  omit?: Prisma.TagOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TagInclude<ExtArgs> | null
  where?: Prisma.TagWhereInput
  orderBy?: Prisma.TagOrderByWithRelationInput | Prisma.TagOrderByWithRelationInput[]
  cursor?: Prisma.TagWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TagScalarFieldEnum | Prisma.TagScalarFieldEnum[]
}

/**
 * Listing.relations
 */
export type Listing$relationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  where?: Prisma.ListingWhereInput
  orderBy?: Prisma.ListingOrderByWithRelationInput | Prisma.ListingOrderByWithRelationInput[]
  cursor?: Prisma.ListingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ListingScalarFieldEnum | Prisma.ListingScalarFieldEnum[]
}

/**
 * Listing.relationOf
 */
export type Listing$relationOfArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  where?: Prisma.ListingWhereInput
  orderBy?: Prisma.ListingOrderByWithRelationInput | Prisma.ListingOrderByWithRelationInput[]
  cursor?: Prisma.ListingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ListingScalarFieldEnum | Prisma.ListingScalarFieldEnum[]
}

/**
 * Listing.proposer
 */
export type Listing$proposerArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * Listing.location
 */
export type Listing$locationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingLocation
   */
  select?: Prisma.ListingLocationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingLocation
   */
  omit?: Prisma.ListingLocationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingLocationInclude<ExtArgs> | null
  where?: Prisma.ListingLocationWhereInput
}

/**
 * Listing.edits
 */
export type Listing$editsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
  where?: Prisma.ListingEditWhereInput
  orderBy?: Prisma.ListingEditOrderByWithRelationInput | Prisma.ListingEditOrderByWithRelationInput[]
  cursor?: Prisma.ListingEditWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ListingEditScalarFieldEnum | Prisma.ListingEditScalarFieldEnum[]
}

/**
 * Listing.actions
 */
export type Listing$actionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingAction
   */
  select?: Prisma.ListingActionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingAction
   */
  omit?: Prisma.ListingActionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingActionInclude<ExtArgs> | null
  where?: Prisma.ListingActionWhereInput
  orderBy?: Prisma.ListingActionOrderByWithRelationInput | Prisma.ListingActionOrderByWithRelationInput[]
  cursor?: Prisma.ListingActionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ListingActionScalarFieldEnum | Prisma.ListingActionScalarFieldEnum[]
}

/**
 * Listing without action
 */
export type ListingDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
}
