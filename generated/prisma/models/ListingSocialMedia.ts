
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `ListingSocialMedia` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model ListingSocialMedia
 * 
 */
export type ListingSocialMediaModel = runtime.Types.Result.DefaultSelection<Prisma.$ListingSocialMediaPayload>

export type AggregateListingSocialMedia = {
  _count: ListingSocialMediaCountAggregateOutputType | null
  _avg: ListingSocialMediaAvgAggregateOutputType | null
  _sum: ListingSocialMediaSumAggregateOutputType | null
  _min: ListingSocialMediaMinAggregateOutputType | null
  _max: ListingSocialMediaMaxAggregateOutputType | null
}

export type ListingSocialMediaAvgAggregateOutputType = {
  id: number | null
  listingId: number | null
  listingEditId: number | null
}

export type ListingSocialMediaSumAggregateOutputType = {
  id: number | null
  listingId: number | null
  listingEditId: number | null
}

export type ListingSocialMediaMinAggregateOutputType = {
  id: number | null
  createdAt: Date | null
  updatedAt: Date | null
  listingId: number | null
  platform: string | null
  url: string | null
  listingEditId: number | null
}

export type ListingSocialMediaMaxAggregateOutputType = {
  id: number | null
  createdAt: Date | null
  updatedAt: Date | null
  listingId: number | null
  platform: string | null
  url: string | null
  listingEditId: number | null
}

export type ListingSocialMediaCountAggregateOutputType = {
  id: number
  createdAt: number
  updatedAt: number
  listingId: number
  platform: number
  url: number
  listingEditId: number
  _all: number
}


export type ListingSocialMediaAvgAggregateInputType = {
  id?: true
  listingId?: true
  listingEditId?: true
}

export type ListingSocialMediaSumAggregateInputType = {
  id?: true
  listingId?: true
  listingEditId?: true
}

export type ListingSocialMediaMinAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  listingId?: true
  platform?: true
  url?: true
  listingEditId?: true
}

export type ListingSocialMediaMaxAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  listingId?: true
  platform?: true
  url?: true
  listingEditId?: true
}

export type ListingSocialMediaCountAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  listingId?: true
  platform?: true
  url?: true
  listingEditId?: true
  _all?: true
}

export type ListingSocialMediaAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ListingSocialMedia to aggregate.
   */
  where?: Prisma.ListingSocialMediaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ListingSocialMedias to fetch.
   */
  orderBy?: Prisma.ListingSocialMediaOrderByWithRelationInput | Prisma.ListingSocialMediaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ListingSocialMediaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ListingSocialMedias from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ListingSocialMedias.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ListingSocialMedias
  **/
  _count?: true | ListingSocialMediaCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ListingSocialMediaAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ListingSocialMediaSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ListingSocialMediaMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ListingSocialMediaMaxAggregateInputType
}

export type GetListingSocialMediaAggregateType<T extends ListingSocialMediaAggregateArgs> = {
      [P in keyof T & keyof AggregateListingSocialMedia]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateListingSocialMedia[P]>
    : Prisma.GetScalarType<T[P], AggregateListingSocialMedia[P]>
}




export type ListingSocialMediaGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ListingSocialMediaWhereInput
  orderBy?: Prisma.ListingSocialMediaOrderByWithAggregationInput | Prisma.ListingSocialMediaOrderByWithAggregationInput[]
  by: Prisma.ListingSocialMediaScalarFieldEnum[] | Prisma.ListingSocialMediaScalarFieldEnum
  having?: Prisma.ListingSocialMediaScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ListingSocialMediaCountAggregateInputType | true
  _avg?: ListingSocialMediaAvgAggregateInputType
  _sum?: ListingSocialMediaSumAggregateInputType
  _min?: ListingSocialMediaMinAggregateInputType
  _max?: ListingSocialMediaMaxAggregateInputType
}

export type ListingSocialMediaGroupByOutputType = {
  id: number
  createdAt: Date
  updatedAt: Date
  listingId: number | null
  platform: string
  url: string
  listingEditId: number | null
  _count: ListingSocialMediaCountAggregateOutputType | null
  _avg: ListingSocialMediaAvgAggregateOutputType | null
  _sum: ListingSocialMediaSumAggregateOutputType | null
  _min: ListingSocialMediaMinAggregateOutputType | null
  _max: ListingSocialMediaMaxAggregateOutputType | null
}

type GetListingSocialMediaGroupByPayload<T extends ListingSocialMediaGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ListingSocialMediaGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ListingSocialMediaGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ListingSocialMediaGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ListingSocialMediaGroupByOutputType[P]>
      }
    >
  >



export type ListingSocialMediaWhereInput = {
  AND?: Prisma.ListingSocialMediaWhereInput | Prisma.ListingSocialMediaWhereInput[]
  OR?: Prisma.ListingSocialMediaWhereInput[]
  NOT?: Prisma.ListingSocialMediaWhereInput | Prisma.ListingSocialMediaWhereInput[]
  id?: Prisma.IntFilter<"ListingSocialMedia"> | number
  createdAt?: Prisma.DateTimeFilter<"ListingSocialMedia"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ListingSocialMedia"> | Date | string
  listingId?: Prisma.IntNullableFilter<"ListingSocialMedia"> | number | null
  platform?: Prisma.StringFilter<"ListingSocialMedia"> | string
  url?: Prisma.StringFilter<"ListingSocialMedia"> | string
  listingEditId?: Prisma.IntNullableFilter<"ListingSocialMedia"> | number | null
  listing?: Prisma.XOR<Prisma.ListingNullableScalarRelationFilter, Prisma.ListingWhereInput> | null
  listingEdit?: Prisma.XOR<Prisma.ListingEditNullableScalarRelationFilter, Prisma.ListingEditWhereInput> | null
}

export type ListingSocialMediaOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  listingId?: Prisma.SortOrderInput | Prisma.SortOrder
  platform?: Prisma.SortOrder
  url?: Prisma.SortOrder
  listingEditId?: Prisma.SortOrderInput | Prisma.SortOrder
  listing?: Prisma.ListingOrderByWithRelationInput
  listingEdit?: Prisma.ListingEditOrderByWithRelationInput
}

export type ListingSocialMediaWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.ListingSocialMediaWhereInput | Prisma.ListingSocialMediaWhereInput[]
  OR?: Prisma.ListingSocialMediaWhereInput[]
  NOT?: Prisma.ListingSocialMediaWhereInput | Prisma.ListingSocialMediaWhereInput[]
  createdAt?: Prisma.DateTimeFilter<"ListingSocialMedia"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ListingSocialMedia"> | Date | string
  listingId?: Prisma.IntNullableFilter<"ListingSocialMedia"> | number | null
  platform?: Prisma.StringFilter<"ListingSocialMedia"> | string
  url?: Prisma.StringFilter<"ListingSocialMedia"> | string
  listingEditId?: Prisma.IntNullableFilter<"ListingSocialMedia"> | number | null
  listing?: Prisma.XOR<Prisma.ListingNullableScalarRelationFilter, Prisma.ListingWhereInput> | null
  listingEdit?: Prisma.XOR<Prisma.ListingEditNullableScalarRelationFilter, Prisma.ListingEditWhereInput> | null
}, "id">

export type ListingSocialMediaOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  listingId?: Prisma.SortOrderInput | Prisma.SortOrder
  platform?: Prisma.SortOrder
  url?: Prisma.SortOrder
  listingEditId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.ListingSocialMediaCountOrderByAggregateInput
  _avg?: Prisma.ListingSocialMediaAvgOrderByAggregateInput
  _max?: Prisma.ListingSocialMediaMaxOrderByAggregateInput
  _min?: Prisma.ListingSocialMediaMinOrderByAggregateInput
  _sum?: Prisma.ListingSocialMediaSumOrderByAggregateInput
}

export type ListingSocialMediaScalarWhereWithAggregatesInput = {
  AND?: Prisma.ListingSocialMediaScalarWhereWithAggregatesInput | Prisma.ListingSocialMediaScalarWhereWithAggregatesInput[]
  OR?: Prisma.ListingSocialMediaScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ListingSocialMediaScalarWhereWithAggregatesInput | Prisma.ListingSocialMediaScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"ListingSocialMedia"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ListingSocialMedia"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ListingSocialMedia"> | Date | string
  listingId?: Prisma.IntNullableWithAggregatesFilter<"ListingSocialMedia"> | number | null
  platform?: Prisma.StringWithAggregatesFilter<"ListingSocialMedia"> | string
  url?: Prisma.StringWithAggregatesFilter<"ListingSocialMedia"> | string
  listingEditId?: Prisma.IntNullableWithAggregatesFilter<"ListingSocialMedia"> | number | null
}

export type ListingSocialMediaCreateInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  platform: string
  url: string
  listing?: Prisma.ListingCreateNestedOneWithoutSocialsInput
  listingEdit?: Prisma.ListingEditCreateNestedOneWithoutSocialsInput
}

export type ListingSocialMediaUncheckedCreateInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId?: number | null
  platform: string
  url: string
  listingEditId?: number | null
}

export type ListingSocialMediaUpdateInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  platform?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  listing?: Prisma.ListingUpdateOneWithoutSocialsNestedInput
  listingEdit?: Prisma.ListingEditUpdateOneWithoutSocialsNestedInput
}

export type ListingSocialMediaUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  platform?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  listingEditId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type ListingSocialMediaCreateManyInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId?: number | null
  platform: string
  url: string
  listingEditId?: number | null
}

export type ListingSocialMediaUpdateManyMutationInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  platform?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ListingSocialMediaUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  platform?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  listingEditId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type ListingSocialMediaListRelationFilter = {
  every?: Prisma.ListingSocialMediaWhereInput
  some?: Prisma.ListingSocialMediaWhereInput
  none?: Prisma.ListingSocialMediaWhereInput
}

export type ListingSocialMediaOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ListingSocialMediaCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  platform?: Prisma.SortOrder
  url?: Prisma.SortOrder
  listingEditId?: Prisma.SortOrder
}

export type ListingSocialMediaAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  listingEditId?: Prisma.SortOrder
}

export type ListingSocialMediaMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  platform?: Prisma.SortOrder
  url?: Prisma.SortOrder
  listingEditId?: Prisma.SortOrder
}

export type ListingSocialMediaMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  platform?: Prisma.SortOrder
  url?: Prisma.SortOrder
  listingEditId?: Prisma.SortOrder
}

export type ListingSocialMediaSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  listingEditId?: Prisma.SortOrder
}

export type ListingSocialMediaCreateNestedManyWithoutListingInput = {
  create?: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingInput> | Prisma.ListingSocialMediaCreateWithoutListingInput[] | Prisma.ListingSocialMediaUncheckedCreateWithoutListingInput[]
  connectOrCreate?: Prisma.ListingSocialMediaCreateOrConnectWithoutListingInput | Prisma.ListingSocialMediaCreateOrConnectWithoutListingInput[]
  createMany?: Prisma.ListingSocialMediaCreateManyListingInputEnvelope
  connect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
}

export type ListingSocialMediaUncheckedCreateNestedManyWithoutListingInput = {
  create?: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingInput> | Prisma.ListingSocialMediaCreateWithoutListingInput[] | Prisma.ListingSocialMediaUncheckedCreateWithoutListingInput[]
  connectOrCreate?: Prisma.ListingSocialMediaCreateOrConnectWithoutListingInput | Prisma.ListingSocialMediaCreateOrConnectWithoutListingInput[]
  createMany?: Prisma.ListingSocialMediaCreateManyListingInputEnvelope
  connect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
}

export type ListingSocialMediaUpdateManyWithoutListingNestedInput = {
  create?: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingInput> | Prisma.ListingSocialMediaCreateWithoutListingInput[] | Prisma.ListingSocialMediaUncheckedCreateWithoutListingInput[]
  connectOrCreate?: Prisma.ListingSocialMediaCreateOrConnectWithoutListingInput | Prisma.ListingSocialMediaCreateOrConnectWithoutListingInput[]
  upsert?: Prisma.ListingSocialMediaUpsertWithWhereUniqueWithoutListingInput | Prisma.ListingSocialMediaUpsertWithWhereUniqueWithoutListingInput[]
  createMany?: Prisma.ListingSocialMediaCreateManyListingInputEnvelope
  set?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  disconnect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  delete?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  connect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  update?: Prisma.ListingSocialMediaUpdateWithWhereUniqueWithoutListingInput | Prisma.ListingSocialMediaUpdateWithWhereUniqueWithoutListingInput[]
  updateMany?: Prisma.ListingSocialMediaUpdateManyWithWhereWithoutListingInput | Prisma.ListingSocialMediaUpdateManyWithWhereWithoutListingInput[]
  deleteMany?: Prisma.ListingSocialMediaScalarWhereInput | Prisma.ListingSocialMediaScalarWhereInput[]
}

export type ListingSocialMediaUncheckedUpdateManyWithoutListingNestedInput = {
  create?: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingInput> | Prisma.ListingSocialMediaCreateWithoutListingInput[] | Prisma.ListingSocialMediaUncheckedCreateWithoutListingInput[]
  connectOrCreate?: Prisma.ListingSocialMediaCreateOrConnectWithoutListingInput | Prisma.ListingSocialMediaCreateOrConnectWithoutListingInput[]
  upsert?: Prisma.ListingSocialMediaUpsertWithWhereUniqueWithoutListingInput | Prisma.ListingSocialMediaUpsertWithWhereUniqueWithoutListingInput[]
  createMany?: Prisma.ListingSocialMediaCreateManyListingInputEnvelope
  set?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  disconnect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  delete?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  connect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  update?: Prisma.ListingSocialMediaUpdateWithWhereUniqueWithoutListingInput | Prisma.ListingSocialMediaUpdateWithWhereUniqueWithoutListingInput[]
  updateMany?: Prisma.ListingSocialMediaUpdateManyWithWhereWithoutListingInput | Prisma.ListingSocialMediaUpdateManyWithWhereWithoutListingInput[]
  deleteMany?: Prisma.ListingSocialMediaScalarWhereInput | Prisma.ListingSocialMediaScalarWhereInput[]
}

export type ListingSocialMediaCreateNestedManyWithoutListingEditInput = {
  create?: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingEditInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingEditInput> | Prisma.ListingSocialMediaCreateWithoutListingEditInput[] | Prisma.ListingSocialMediaUncheckedCreateWithoutListingEditInput[]
  connectOrCreate?: Prisma.ListingSocialMediaCreateOrConnectWithoutListingEditInput | Prisma.ListingSocialMediaCreateOrConnectWithoutListingEditInput[]
  createMany?: Prisma.ListingSocialMediaCreateManyListingEditInputEnvelope
  connect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
}

export type ListingSocialMediaUncheckedCreateNestedManyWithoutListingEditInput = {
  create?: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingEditInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingEditInput> | Prisma.ListingSocialMediaCreateWithoutListingEditInput[] | Prisma.ListingSocialMediaUncheckedCreateWithoutListingEditInput[]
  connectOrCreate?: Prisma.ListingSocialMediaCreateOrConnectWithoutListingEditInput | Prisma.ListingSocialMediaCreateOrConnectWithoutListingEditInput[]
  createMany?: Prisma.ListingSocialMediaCreateManyListingEditInputEnvelope
  connect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
}

export type ListingSocialMediaUpdateManyWithoutListingEditNestedInput = {
  create?: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingEditInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingEditInput> | Prisma.ListingSocialMediaCreateWithoutListingEditInput[] | Prisma.ListingSocialMediaUncheckedCreateWithoutListingEditInput[]
  connectOrCreate?: Prisma.ListingSocialMediaCreateOrConnectWithoutListingEditInput | Prisma.ListingSocialMediaCreateOrConnectWithoutListingEditInput[]
  upsert?: Prisma.ListingSocialMediaUpsertWithWhereUniqueWithoutListingEditInput | Prisma.ListingSocialMediaUpsertWithWhereUniqueWithoutListingEditInput[]
  createMany?: Prisma.ListingSocialMediaCreateManyListingEditInputEnvelope
  set?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  disconnect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  delete?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  connect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  update?: Prisma.ListingSocialMediaUpdateWithWhereUniqueWithoutListingEditInput | Prisma.ListingSocialMediaUpdateWithWhereUniqueWithoutListingEditInput[]
  updateMany?: Prisma.ListingSocialMediaUpdateManyWithWhereWithoutListingEditInput | Prisma.ListingSocialMediaUpdateManyWithWhereWithoutListingEditInput[]
  deleteMany?: Prisma.ListingSocialMediaScalarWhereInput | Prisma.ListingSocialMediaScalarWhereInput[]
}

export type ListingSocialMediaUncheckedUpdateManyWithoutListingEditNestedInput = {
  create?: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingEditInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingEditInput> | Prisma.ListingSocialMediaCreateWithoutListingEditInput[] | Prisma.ListingSocialMediaUncheckedCreateWithoutListingEditInput[]
  connectOrCreate?: Prisma.ListingSocialMediaCreateOrConnectWithoutListingEditInput | Prisma.ListingSocialMediaCreateOrConnectWithoutListingEditInput[]
  upsert?: Prisma.ListingSocialMediaUpsertWithWhereUniqueWithoutListingEditInput | Prisma.ListingSocialMediaUpsertWithWhereUniqueWithoutListingEditInput[]
  createMany?: Prisma.ListingSocialMediaCreateManyListingEditInputEnvelope
  set?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  disconnect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  delete?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  connect?: Prisma.ListingSocialMediaWhereUniqueInput | Prisma.ListingSocialMediaWhereUniqueInput[]
  update?: Prisma.ListingSocialMediaUpdateWithWhereUniqueWithoutListingEditInput | Prisma.ListingSocialMediaUpdateWithWhereUniqueWithoutListingEditInput[]
  updateMany?: Prisma.ListingSocialMediaUpdateManyWithWhereWithoutListingEditInput | Prisma.ListingSocialMediaUpdateManyWithWhereWithoutListingEditInput[]
  deleteMany?: Prisma.ListingSocialMediaScalarWhereInput | Prisma.ListingSocialMediaScalarWhereInput[]
}

export type ListingSocialMediaCreateWithoutListingInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  platform: string
  url: string
  listingEdit?: Prisma.ListingEditCreateNestedOneWithoutSocialsInput
}

export type ListingSocialMediaUncheckedCreateWithoutListingInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  platform: string
  url: string
  listingEditId?: number | null
}

export type ListingSocialMediaCreateOrConnectWithoutListingInput = {
  where: Prisma.ListingSocialMediaWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingInput>
}

export type ListingSocialMediaCreateManyListingInputEnvelope = {
  data: Prisma.ListingSocialMediaCreateManyListingInput | Prisma.ListingSocialMediaCreateManyListingInput[]
  skipDuplicates?: boolean
}

export type ListingSocialMediaUpsertWithWhereUniqueWithoutListingInput = {
  where: Prisma.ListingSocialMediaWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingSocialMediaUpdateWithoutListingInput, Prisma.ListingSocialMediaUncheckedUpdateWithoutListingInput>
  create: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingInput>
}

export type ListingSocialMediaUpdateWithWhereUniqueWithoutListingInput = {
  where: Prisma.ListingSocialMediaWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingSocialMediaUpdateWithoutListingInput, Prisma.ListingSocialMediaUncheckedUpdateWithoutListingInput>
}

export type ListingSocialMediaUpdateManyWithWhereWithoutListingInput = {
  where: Prisma.ListingSocialMediaScalarWhereInput
  data: Prisma.XOR<Prisma.ListingSocialMediaUpdateManyMutationInput, Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingInput>
}

export type ListingSocialMediaScalarWhereInput = {
  AND?: Prisma.ListingSocialMediaScalarWhereInput | Prisma.ListingSocialMediaScalarWhereInput[]
  OR?: Prisma.ListingSocialMediaScalarWhereInput[]
  NOT?: Prisma.ListingSocialMediaScalarWhereInput | Prisma.ListingSocialMediaScalarWhereInput[]
  id?: Prisma.IntFilter<"ListingSocialMedia"> | number
  createdAt?: Prisma.DateTimeFilter<"ListingSocialMedia"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ListingSocialMedia"> | Date | string
  listingId?: Prisma.IntNullableFilter<"ListingSocialMedia"> | number | null
  platform?: Prisma.StringFilter<"ListingSocialMedia"> | string
  url?: Prisma.StringFilter<"ListingSocialMedia"> | string
  listingEditId?: Prisma.IntNullableFilter<"ListingSocialMedia"> | number | null
}

export type ListingSocialMediaCreateWithoutListingEditInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  platform: string
  url: string
  listing?: Prisma.ListingCreateNestedOneWithoutSocialsInput
}

export type ListingSocialMediaUncheckedCreateWithoutListingEditInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId?: number | null
  platform: string
  url: string
}

export type ListingSocialMediaCreateOrConnectWithoutListingEditInput = {
  where: Prisma.ListingSocialMediaWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingEditInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingEditInput>
}

export type ListingSocialMediaCreateManyListingEditInputEnvelope = {
  data: Prisma.ListingSocialMediaCreateManyListingEditInput | Prisma.ListingSocialMediaCreateManyListingEditInput[]
  skipDuplicates?: boolean
}

export type ListingSocialMediaUpsertWithWhereUniqueWithoutListingEditInput = {
  where: Prisma.ListingSocialMediaWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingSocialMediaUpdateWithoutListingEditInput, Prisma.ListingSocialMediaUncheckedUpdateWithoutListingEditInput>
  create: Prisma.XOR<Prisma.ListingSocialMediaCreateWithoutListingEditInput, Prisma.ListingSocialMediaUncheckedCreateWithoutListingEditInput>
}

export type ListingSocialMediaUpdateWithWhereUniqueWithoutListingEditInput = {
  where: Prisma.ListingSocialMediaWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingSocialMediaUpdateWithoutListingEditInput, Prisma.ListingSocialMediaUncheckedUpdateWithoutListingEditInput>
}

export type ListingSocialMediaUpdateManyWithWhereWithoutListingEditInput = {
  where: Prisma.ListingSocialMediaScalarWhereInput
  data: Prisma.XOR<Prisma.ListingSocialMediaUpdateManyMutationInput, Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingEditInput>
}

export type ListingSocialMediaCreateManyListingInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  platform: string
  url: string
  listingEditId?: number | null
}

export type ListingSocialMediaUpdateWithoutListingInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  platform?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  listingEdit?: Prisma.ListingEditUpdateOneWithoutSocialsNestedInput
}

export type ListingSocialMediaUncheckedUpdateWithoutListingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  platform?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  listingEditId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type ListingSocialMediaUncheckedUpdateManyWithoutListingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  platform?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  listingEditId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type ListingSocialMediaCreateManyListingEditInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId?: number | null
  platform: string
  url: string
}

export type ListingSocialMediaUpdateWithoutListingEditInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  platform?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  listing?: Prisma.ListingUpdateOneWithoutSocialsNestedInput
}

export type ListingSocialMediaUncheckedUpdateWithoutListingEditInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  platform?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ListingSocialMediaUncheckedUpdateManyWithoutListingEditInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  platform?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
}



export type ListingSocialMediaSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  listingId?: boolean
  platform?: boolean
  url?: boolean
  listingEditId?: boolean
  listing?: boolean | Prisma.ListingSocialMedia$listingArgs<ExtArgs>
  listingEdit?: boolean | Prisma.ListingSocialMedia$listingEditArgs<ExtArgs>
}, ExtArgs["result"]["listingSocialMedia"]>

export type ListingSocialMediaSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  listingId?: boolean
  platform?: boolean
  url?: boolean
  listingEditId?: boolean
  listing?: boolean | Prisma.ListingSocialMedia$listingArgs<ExtArgs>
  listingEdit?: boolean | Prisma.ListingSocialMedia$listingEditArgs<ExtArgs>
}, ExtArgs["result"]["listingSocialMedia"]>

export type ListingSocialMediaSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  listingId?: boolean
  platform?: boolean
  url?: boolean
  listingEditId?: boolean
  listing?: boolean | Prisma.ListingSocialMedia$listingArgs<ExtArgs>
  listingEdit?: boolean | Prisma.ListingSocialMedia$listingEditArgs<ExtArgs>
}, ExtArgs["result"]["listingSocialMedia"]>

export type ListingSocialMediaSelectScalar = {
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  listingId?: boolean
  platform?: boolean
  url?: boolean
  listingEditId?: boolean
}

export type ListingSocialMediaOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "listingId" | "platform" | "url" | "listingEditId", ExtArgs["result"]["listingSocialMedia"]>
export type ListingSocialMediaInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  listing?: boolean | Prisma.ListingSocialMedia$listingArgs<ExtArgs>
  listingEdit?: boolean | Prisma.ListingSocialMedia$listingEditArgs<ExtArgs>
}
export type ListingSocialMediaIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  listing?: boolean | Prisma.ListingSocialMedia$listingArgs<ExtArgs>
  listingEdit?: boolean | Prisma.ListingSocialMedia$listingEditArgs<ExtArgs>
}
export type ListingSocialMediaIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  listing?: boolean | Prisma.ListingSocialMedia$listingArgs<ExtArgs>
  listingEdit?: boolean | Prisma.ListingSocialMedia$listingEditArgs<ExtArgs>
}

export type $ListingSocialMediaPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ListingSocialMedia"
  objects: {
    listing: Prisma.$ListingPayload<ExtArgs> | null
    listingEdit: Prisma.$ListingEditPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    createdAt: Date
    updatedAt: Date
    listingId: number | null
    platform: string
    url: string
    listingEditId: number | null
  }, ExtArgs["result"]["listingSocialMedia"]>
  composites: {}
}

export type ListingSocialMediaGetPayload<S extends boolean | null | undefined | ListingSocialMediaDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload, S>

export type ListingSocialMediaCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ListingSocialMediaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ListingSocialMediaCountAggregateInputType | true
  }

export interface ListingSocialMediaDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListingSocialMedia'], meta: { name: 'ListingSocialMedia' } }
  /**
   * Find zero or one ListingSocialMedia that matches the filter.
   * @param {ListingSocialMediaFindUniqueArgs} args - Arguments to find a ListingSocialMedia
   * @example
   * // Get one ListingSocialMedia
   * const listingSocialMedia = await prisma.listingSocialMedia.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ListingSocialMediaFindUniqueArgs>(args: Prisma.SelectSubset<T, ListingSocialMediaFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ListingSocialMediaClient<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ListingSocialMedia that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ListingSocialMediaFindUniqueOrThrowArgs} args - Arguments to find a ListingSocialMedia
   * @example
   * // Get one ListingSocialMedia
   * const listingSocialMedia = await prisma.listingSocialMedia.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ListingSocialMediaFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ListingSocialMediaFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ListingSocialMediaClient<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ListingSocialMedia that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingSocialMediaFindFirstArgs} args - Arguments to find a ListingSocialMedia
   * @example
   * // Get one ListingSocialMedia
   * const listingSocialMedia = await prisma.listingSocialMedia.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ListingSocialMediaFindFirstArgs>(args?: Prisma.SelectSubset<T, ListingSocialMediaFindFirstArgs<ExtArgs>>): Prisma.Prisma__ListingSocialMediaClient<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ListingSocialMedia that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingSocialMediaFindFirstOrThrowArgs} args - Arguments to find a ListingSocialMedia
   * @example
   * // Get one ListingSocialMedia
   * const listingSocialMedia = await prisma.listingSocialMedia.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ListingSocialMediaFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ListingSocialMediaFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ListingSocialMediaClient<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ListingSocialMedias that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingSocialMediaFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ListingSocialMedias
   * const listingSocialMedias = await prisma.listingSocialMedia.findMany()
   * 
   * // Get first 10 ListingSocialMedias
   * const listingSocialMedias = await prisma.listingSocialMedia.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const listingSocialMediaWithIdOnly = await prisma.listingSocialMedia.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ListingSocialMediaFindManyArgs>(args?: Prisma.SelectSubset<T, ListingSocialMediaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ListingSocialMedia.
   * @param {ListingSocialMediaCreateArgs} args - Arguments to create a ListingSocialMedia.
   * @example
   * // Create one ListingSocialMedia
   * const ListingSocialMedia = await prisma.listingSocialMedia.create({
   *   data: {
   *     // ... data to create a ListingSocialMedia
   *   }
   * })
   * 
   */
  create<T extends ListingSocialMediaCreateArgs>(args: Prisma.SelectSubset<T, ListingSocialMediaCreateArgs<ExtArgs>>): Prisma.Prisma__ListingSocialMediaClient<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ListingSocialMedias.
   * @param {ListingSocialMediaCreateManyArgs} args - Arguments to create many ListingSocialMedias.
   * @example
   * // Create many ListingSocialMedias
   * const listingSocialMedia = await prisma.listingSocialMedia.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ListingSocialMediaCreateManyArgs>(args?: Prisma.SelectSubset<T, ListingSocialMediaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ListingSocialMedias and returns the data saved in the database.
   * @param {ListingSocialMediaCreateManyAndReturnArgs} args - Arguments to create many ListingSocialMedias.
   * @example
   * // Create many ListingSocialMedias
   * const listingSocialMedia = await prisma.listingSocialMedia.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ListingSocialMedias and only return the `id`
   * const listingSocialMediaWithIdOnly = await prisma.listingSocialMedia.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ListingSocialMediaCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ListingSocialMediaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ListingSocialMedia.
   * @param {ListingSocialMediaDeleteArgs} args - Arguments to delete one ListingSocialMedia.
   * @example
   * // Delete one ListingSocialMedia
   * const ListingSocialMedia = await prisma.listingSocialMedia.delete({
   *   where: {
   *     // ... filter to delete one ListingSocialMedia
   *   }
   * })
   * 
   */
  delete<T extends ListingSocialMediaDeleteArgs>(args: Prisma.SelectSubset<T, ListingSocialMediaDeleteArgs<ExtArgs>>): Prisma.Prisma__ListingSocialMediaClient<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ListingSocialMedia.
   * @param {ListingSocialMediaUpdateArgs} args - Arguments to update one ListingSocialMedia.
   * @example
   * // Update one ListingSocialMedia
   * const listingSocialMedia = await prisma.listingSocialMedia.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ListingSocialMediaUpdateArgs>(args: Prisma.SelectSubset<T, ListingSocialMediaUpdateArgs<ExtArgs>>): Prisma.Prisma__ListingSocialMediaClient<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ListingSocialMedias.
   * @param {ListingSocialMediaDeleteManyArgs} args - Arguments to filter ListingSocialMedias to delete.
   * @example
   * // Delete a few ListingSocialMedias
   * const { count } = await prisma.listingSocialMedia.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ListingSocialMediaDeleteManyArgs>(args?: Prisma.SelectSubset<T, ListingSocialMediaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ListingSocialMedias.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingSocialMediaUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ListingSocialMedias
   * const listingSocialMedia = await prisma.listingSocialMedia.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ListingSocialMediaUpdateManyArgs>(args: Prisma.SelectSubset<T, ListingSocialMediaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ListingSocialMedias and returns the data updated in the database.
   * @param {ListingSocialMediaUpdateManyAndReturnArgs} args - Arguments to update many ListingSocialMedias.
   * @example
   * // Update many ListingSocialMedias
   * const listingSocialMedia = await prisma.listingSocialMedia.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ListingSocialMedias and only return the `id`
   * const listingSocialMediaWithIdOnly = await prisma.listingSocialMedia.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ListingSocialMediaUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ListingSocialMediaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ListingSocialMedia.
   * @param {ListingSocialMediaUpsertArgs} args - Arguments to update or create a ListingSocialMedia.
   * @example
   * // Update or create a ListingSocialMedia
   * const listingSocialMedia = await prisma.listingSocialMedia.upsert({
   *   create: {
   *     // ... data to create a ListingSocialMedia
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ListingSocialMedia we want to update
   *   }
   * })
   */
  upsert<T extends ListingSocialMediaUpsertArgs>(args: Prisma.SelectSubset<T, ListingSocialMediaUpsertArgs<ExtArgs>>): Prisma.Prisma__ListingSocialMediaClient<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ListingSocialMedias.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingSocialMediaCountArgs} args - Arguments to filter ListingSocialMedias to count.
   * @example
   * // Count the number of ListingSocialMedias
   * const count = await prisma.listingSocialMedia.count({
   *   where: {
   *     // ... the filter for the ListingSocialMedias we want to count
   *   }
   * })
  **/
  count<T extends ListingSocialMediaCountArgs>(
    args?: Prisma.Subset<T, ListingSocialMediaCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ListingSocialMediaCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ListingSocialMedia.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingSocialMediaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ListingSocialMediaAggregateArgs>(args: Prisma.Subset<T, ListingSocialMediaAggregateArgs>): Prisma.PrismaPromise<GetListingSocialMediaAggregateType<T>>

  /**
   * Group by ListingSocialMedia.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingSocialMediaGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ListingSocialMediaGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ListingSocialMediaGroupByArgs['orderBy'] }
      : { orderBy?: ListingSocialMediaGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ListingSocialMediaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingSocialMediaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ListingSocialMedia model
 */
readonly fields: ListingSocialMediaFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ListingSocialMedia.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ListingSocialMediaClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  listing<T extends Prisma.ListingSocialMedia$listingArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ListingSocialMedia$listingArgs<ExtArgs>>): Prisma.Prisma__ListingClient<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  listingEdit<T extends Prisma.ListingSocialMedia$listingEditArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ListingSocialMedia$listingEditArgs<ExtArgs>>): Prisma.Prisma__ListingEditClient<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ListingSocialMedia model
 */
export interface ListingSocialMediaFieldRefs {
  readonly id: Prisma.FieldRef<"ListingSocialMedia", 'Int'>
  readonly createdAt: Prisma.FieldRef<"ListingSocialMedia", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ListingSocialMedia", 'DateTime'>
  readonly listingId: Prisma.FieldRef<"ListingSocialMedia", 'Int'>
  readonly platform: Prisma.FieldRef<"ListingSocialMedia", 'String'>
  readonly url: Prisma.FieldRef<"ListingSocialMedia", 'String'>
  readonly listingEditId: Prisma.FieldRef<"ListingSocialMedia", 'Int'>
}
    

// Custom InputTypes
/**
 * ListingSocialMedia findUnique
 */
export type ListingSocialMediaFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
  /**
   * Filter, which ListingSocialMedia to fetch.
   */
  where: Prisma.ListingSocialMediaWhereUniqueInput
}

/**
 * ListingSocialMedia findUniqueOrThrow
 */
export type ListingSocialMediaFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
  /**
   * Filter, which ListingSocialMedia to fetch.
   */
  where: Prisma.ListingSocialMediaWhereUniqueInput
}

/**
 * ListingSocialMedia findFirst
 */
export type ListingSocialMediaFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
  /**
   * Filter, which ListingSocialMedia to fetch.
   */
  where?: Prisma.ListingSocialMediaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ListingSocialMedias to fetch.
   */
  orderBy?: Prisma.ListingSocialMediaOrderByWithRelationInput | Prisma.ListingSocialMediaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ListingSocialMedias.
   */
  cursor?: Prisma.ListingSocialMediaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ListingSocialMedias from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ListingSocialMedias.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ListingSocialMedias.
   */
  distinct?: Prisma.ListingSocialMediaScalarFieldEnum | Prisma.ListingSocialMediaScalarFieldEnum[]
}

/**
 * ListingSocialMedia findFirstOrThrow
 */
export type ListingSocialMediaFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
  /**
   * Filter, which ListingSocialMedia to fetch.
   */
  where?: Prisma.ListingSocialMediaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ListingSocialMedias to fetch.
   */
  orderBy?: Prisma.ListingSocialMediaOrderByWithRelationInput | Prisma.ListingSocialMediaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ListingSocialMedias.
   */
  cursor?: Prisma.ListingSocialMediaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ListingSocialMedias from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ListingSocialMedias.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ListingSocialMedias.
   */
  distinct?: Prisma.ListingSocialMediaScalarFieldEnum | Prisma.ListingSocialMediaScalarFieldEnum[]
}

/**
 * ListingSocialMedia findMany
 */
export type ListingSocialMediaFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
  /**
   * Filter, which ListingSocialMedias to fetch.
   */
  where?: Prisma.ListingSocialMediaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ListingSocialMedias to fetch.
   */
  orderBy?: Prisma.ListingSocialMediaOrderByWithRelationInput | Prisma.ListingSocialMediaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ListingSocialMedias.
   */
  cursor?: Prisma.ListingSocialMediaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ListingSocialMedias from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ListingSocialMedias.
   */
  skip?: number
  distinct?: Prisma.ListingSocialMediaScalarFieldEnum | Prisma.ListingSocialMediaScalarFieldEnum[]
}

/**
 * ListingSocialMedia create
 */
export type ListingSocialMediaCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
  /**
   * The data needed to create a ListingSocialMedia.
   */
  data: Prisma.XOR<Prisma.ListingSocialMediaCreateInput, Prisma.ListingSocialMediaUncheckedCreateInput>
}

/**
 * ListingSocialMedia createMany
 */
export type ListingSocialMediaCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ListingSocialMedias.
   */
  data: Prisma.ListingSocialMediaCreateManyInput | Prisma.ListingSocialMediaCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ListingSocialMedia createManyAndReturn
 */
export type ListingSocialMediaCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * The data used to create many ListingSocialMedias.
   */
  data: Prisma.ListingSocialMediaCreateManyInput | Prisma.ListingSocialMediaCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ListingSocialMedia update
 */
export type ListingSocialMediaUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
  /**
   * The data needed to update a ListingSocialMedia.
   */
  data: Prisma.XOR<Prisma.ListingSocialMediaUpdateInput, Prisma.ListingSocialMediaUncheckedUpdateInput>
  /**
   * Choose, which ListingSocialMedia to update.
   */
  where: Prisma.ListingSocialMediaWhereUniqueInput
}

/**
 * ListingSocialMedia updateMany
 */
export type ListingSocialMediaUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ListingSocialMedias.
   */
  data: Prisma.XOR<Prisma.ListingSocialMediaUpdateManyMutationInput, Prisma.ListingSocialMediaUncheckedUpdateManyInput>
  /**
   * Filter which ListingSocialMedias to update
   */
  where?: Prisma.ListingSocialMediaWhereInput
  /**
   * Limit how many ListingSocialMedias to update.
   */
  limit?: number
}

/**
 * ListingSocialMedia updateManyAndReturn
 */
export type ListingSocialMediaUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * The data used to update ListingSocialMedias.
   */
  data: Prisma.XOR<Prisma.ListingSocialMediaUpdateManyMutationInput, Prisma.ListingSocialMediaUncheckedUpdateManyInput>
  /**
   * Filter which ListingSocialMedias to update
   */
  where?: Prisma.ListingSocialMediaWhereInput
  /**
   * Limit how many ListingSocialMedias to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ListingSocialMedia upsert
 */
export type ListingSocialMediaUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
  /**
   * The filter to search for the ListingSocialMedia to update in case it exists.
   */
  where: Prisma.ListingSocialMediaWhereUniqueInput
  /**
   * In case the ListingSocialMedia found by the `where` argument doesn't exist, create a new ListingSocialMedia with this data.
   */
  create: Prisma.XOR<Prisma.ListingSocialMediaCreateInput, Prisma.ListingSocialMediaUncheckedCreateInput>
  /**
   * In case the ListingSocialMedia was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ListingSocialMediaUpdateInput, Prisma.ListingSocialMediaUncheckedUpdateInput>
}

/**
 * ListingSocialMedia delete
 */
export type ListingSocialMediaDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
  /**
   * Filter which ListingSocialMedia to delete.
   */
  where: Prisma.ListingSocialMediaWhereUniqueInput
}

/**
 * ListingSocialMedia deleteMany
 */
export type ListingSocialMediaDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ListingSocialMedias to delete
   */
  where?: Prisma.ListingSocialMediaWhereInput
  /**
   * Limit how many ListingSocialMedias to delete.
   */
  limit?: number
}

/**
 * ListingSocialMedia.listing
 */
export type ListingSocialMedia$listingArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null
  where?: Prisma.ListingWhereInput
}

/**
 * ListingSocialMedia.listingEdit
 */
export type ListingSocialMedia$listingEditArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
  where?: Prisma.ListingEditWhereInput
}

/**
 * ListingSocialMedia without action
 */
export type ListingSocialMediaDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
}
