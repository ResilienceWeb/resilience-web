
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `ListingEdit` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model ListingEdit
 * 
 */
export type ListingEditModel = runtime.Types.Result.DefaultSelection<Prisma.$ListingEditPayload>

export type AggregateListingEdit = {
  _count: ListingEditCountAggregateOutputType | null
  _avg: ListingEditAvgAggregateOutputType | null
  _sum: ListingEditSumAggregateOutputType | null
  _min: ListingEditMinAggregateOutputType | null
  _max: ListingEditMaxAggregateOutputType | null
}

export type ListingEditAvgAggregateOutputType = {
  id: number | null
  listingId: number | null
  categoryId: number | null
  locationId: number | null
}

export type ListingEditSumAggregateOutputType = {
  id: number | null
  listingId: number | null
  categoryId: number | null
  locationId: number | null
}

export type ListingEditMinAggregateOutputType = {
  id: number | null
  createdAt: Date | null
  updatedAt: Date | null
  listingId: number | null
  title: string | null
  website: string | null
  description: string | null
  email: string | null
  categoryId: number | null
  image: string | null
  slug: string | null
  locationId: number | null
  userId: string | null
  accepted: boolean | null
}

export type ListingEditMaxAggregateOutputType = {
  id: number | null
  createdAt: Date | null
  updatedAt: Date | null
  listingId: number | null
  title: string | null
  website: string | null
  description: string | null
  email: string | null
  categoryId: number | null
  image: string | null
  slug: string | null
  locationId: number | null
  userId: string | null
  accepted: boolean | null
}

export type ListingEditCountAggregateOutputType = {
  id: number
  createdAt: number
  updatedAt: number
  listingId: number
  title: number
  website: number
  description: number
  email: number
  categoryId: number
  image: number
  slug: number
  locationId: number
  userId: number
  accepted: number
  _all: number
}


export type ListingEditAvgAggregateInputType = {
  id?: true
  listingId?: true
  categoryId?: true
  locationId?: true
}

export type ListingEditSumAggregateInputType = {
  id?: true
  listingId?: true
  categoryId?: true
  locationId?: true
}

export type ListingEditMinAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  listingId?: true
  title?: true
  website?: true
  description?: true
  email?: true
  categoryId?: true
  image?: true
  slug?: true
  locationId?: true
  userId?: true
  accepted?: true
}

export type ListingEditMaxAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  listingId?: true
  title?: true
  website?: true
  description?: true
  email?: true
  categoryId?: true
  image?: true
  slug?: true
  locationId?: true
  userId?: true
  accepted?: true
}

export type ListingEditCountAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  listingId?: true
  title?: true
  website?: true
  description?: true
  email?: true
  categoryId?: true
  image?: true
  slug?: true
  locationId?: true
  userId?: true
  accepted?: true
  _all?: true
}

export type ListingEditAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ListingEdit to aggregate.
   */
  where?: Prisma.ListingEditWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ListingEdits to fetch.
   */
  orderBy?: Prisma.ListingEditOrderByWithRelationInput | Prisma.ListingEditOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ListingEditWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ListingEdits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ListingEdits.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ListingEdits
  **/
  _count?: true | ListingEditCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ListingEditAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ListingEditSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ListingEditMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ListingEditMaxAggregateInputType
}

export type GetListingEditAggregateType<T extends ListingEditAggregateArgs> = {
      [P in keyof T & keyof AggregateListingEdit]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateListingEdit[P]>
    : Prisma.GetScalarType<T[P], AggregateListingEdit[P]>
}




export type ListingEditGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ListingEditWhereInput
  orderBy?: Prisma.ListingEditOrderByWithAggregationInput | Prisma.ListingEditOrderByWithAggregationInput[]
  by: Prisma.ListingEditScalarFieldEnum[] | Prisma.ListingEditScalarFieldEnum
  having?: Prisma.ListingEditScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ListingEditCountAggregateInputType | true
  _avg?: ListingEditAvgAggregateInputType
  _sum?: ListingEditSumAggregateInputType
  _min?: ListingEditMinAggregateInputType
  _max?: ListingEditMaxAggregateInputType
}

export type ListingEditGroupByOutputType = {
  id: number
  createdAt: Date
  updatedAt: Date
  listingId: number
  title: string | null
  website: string | null
  description: string | null
  email: string | null
  categoryId: number | null
  image: string | null
  slug: string | null
  locationId: number | null
  userId: string
  accepted: boolean
  _count: ListingEditCountAggregateOutputType | null
  _avg: ListingEditAvgAggregateOutputType | null
  _sum: ListingEditSumAggregateOutputType | null
  _min: ListingEditMinAggregateOutputType | null
  _max: ListingEditMaxAggregateOutputType | null
}

type GetListingEditGroupByPayload<T extends ListingEditGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ListingEditGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ListingEditGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ListingEditGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ListingEditGroupByOutputType[P]>
      }
    >
  >



export type ListingEditWhereInput = {
  AND?: Prisma.ListingEditWhereInput | Prisma.ListingEditWhereInput[]
  OR?: Prisma.ListingEditWhereInput[]
  NOT?: Prisma.ListingEditWhereInput | Prisma.ListingEditWhereInput[]
  id?: Prisma.IntFilter<"ListingEdit"> | number
  createdAt?: Prisma.DateTimeFilter<"ListingEdit"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ListingEdit"> | Date | string
  listingId?: Prisma.IntFilter<"ListingEdit"> | number
  title?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  website?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  description?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  email?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  categoryId?: Prisma.IntNullableFilter<"ListingEdit"> | number | null
  image?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  slug?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  locationId?: Prisma.IntNullableFilter<"ListingEdit"> | number | null
  userId?: Prisma.StringFilter<"ListingEdit"> | string
  accepted?: Prisma.BoolFilter<"ListingEdit"> | boolean
  listing?: Prisma.XOR<Prisma.ListingScalarRelationFilter, Prisma.ListingWhereInput>
  category?: Prisma.XOR<Prisma.CategoryNullableScalarRelationFilter, Prisma.CategoryWhereInput> | null
  tags?: Prisma.TagListRelationFilter
  location?: Prisma.XOR<Prisma.ListingLocationNullableScalarRelationFilter, Prisma.ListingLocationWhereInput> | null
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  socials?: Prisma.ListingSocialMediaListRelationFilter
  actions?: Prisma.ListingActionListRelationFilter
}

export type ListingEditOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  title?: Prisma.SortOrderInput | Prisma.SortOrder
  website?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  categoryId?: Prisma.SortOrderInput | Prisma.SortOrder
  image?: Prisma.SortOrderInput | Prisma.SortOrder
  slug?: Prisma.SortOrderInput | Prisma.SortOrder
  locationId?: Prisma.SortOrderInput | Prisma.SortOrder
  userId?: Prisma.SortOrder
  accepted?: Prisma.SortOrder
  listing?: Prisma.ListingOrderByWithRelationInput
  category?: Prisma.CategoryOrderByWithRelationInput
  tags?: Prisma.TagOrderByRelationAggregateInput
  location?: Prisma.ListingLocationOrderByWithRelationInput
  user?: Prisma.UserOrderByWithRelationInput
  socials?: Prisma.ListingSocialMediaOrderByRelationAggregateInput
  actions?: Prisma.ListingActionOrderByRelationAggregateInput
}

export type ListingEditWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.ListingEditWhereInput | Prisma.ListingEditWhereInput[]
  OR?: Prisma.ListingEditWhereInput[]
  NOT?: Prisma.ListingEditWhereInput | Prisma.ListingEditWhereInput[]
  createdAt?: Prisma.DateTimeFilter<"ListingEdit"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ListingEdit"> | Date | string
  listingId?: Prisma.IntFilter<"ListingEdit"> | number
  title?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  website?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  description?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  email?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  categoryId?: Prisma.IntNullableFilter<"ListingEdit"> | number | null
  image?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  slug?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  locationId?: Prisma.IntNullableFilter<"ListingEdit"> | number | null
  userId?: Prisma.StringFilter<"ListingEdit"> | string
  accepted?: Prisma.BoolFilter<"ListingEdit"> | boolean
  listing?: Prisma.XOR<Prisma.ListingScalarRelationFilter, Prisma.ListingWhereInput>
  category?: Prisma.XOR<Prisma.CategoryNullableScalarRelationFilter, Prisma.CategoryWhereInput> | null
  tags?: Prisma.TagListRelationFilter
  location?: Prisma.XOR<Prisma.ListingLocationNullableScalarRelationFilter, Prisma.ListingLocationWhereInput> | null
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  socials?: Prisma.ListingSocialMediaListRelationFilter
  actions?: Prisma.ListingActionListRelationFilter
}, "id">

export type ListingEditOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  title?: Prisma.SortOrderInput | Prisma.SortOrder
  website?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  categoryId?: Prisma.SortOrderInput | Prisma.SortOrder
  image?: Prisma.SortOrderInput | Prisma.SortOrder
  slug?: Prisma.SortOrderInput | Prisma.SortOrder
  locationId?: Prisma.SortOrderInput | Prisma.SortOrder
  userId?: Prisma.SortOrder
  accepted?: Prisma.SortOrder
  _count?: Prisma.ListingEditCountOrderByAggregateInput
  _avg?: Prisma.ListingEditAvgOrderByAggregateInput
  _max?: Prisma.ListingEditMaxOrderByAggregateInput
  _min?: Prisma.ListingEditMinOrderByAggregateInput
  _sum?: Prisma.ListingEditSumOrderByAggregateInput
}

export type ListingEditScalarWhereWithAggregatesInput = {
  AND?: Prisma.ListingEditScalarWhereWithAggregatesInput | Prisma.ListingEditScalarWhereWithAggregatesInput[]
  OR?: Prisma.ListingEditScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ListingEditScalarWhereWithAggregatesInput | Prisma.ListingEditScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"ListingEdit"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ListingEdit"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ListingEdit"> | Date | string
  listingId?: Prisma.IntWithAggregatesFilter<"ListingEdit"> | number
  title?: Prisma.StringNullableWithAggregatesFilter<"ListingEdit"> | string | null
  website?: Prisma.StringNullableWithAggregatesFilter<"ListingEdit"> | string | null
  description?: Prisma.StringNullableWithAggregatesFilter<"ListingEdit"> | string | null
  email?: Prisma.StringNullableWithAggregatesFilter<"ListingEdit"> | string | null
  categoryId?: Prisma.IntNullableWithAggregatesFilter<"ListingEdit"> | number | null
  image?: Prisma.StringNullableWithAggregatesFilter<"ListingEdit"> | string | null
  slug?: Prisma.StringNullableWithAggregatesFilter<"ListingEdit"> | string | null
  locationId?: Prisma.IntNullableWithAggregatesFilter<"ListingEdit"> | number | null
  userId?: Prisma.StringWithAggregatesFilter<"ListingEdit"> | string
  accepted?: Prisma.BoolWithAggregatesFilter<"ListingEdit"> | boolean
}

export type ListingEditCreateInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  image?: string | null
  slug?: string | null
  accepted?: boolean
  listing: Prisma.ListingCreateNestedOneWithoutEditsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingEditInput
  tags?: Prisma.TagCreateNestedManyWithoutListingEditInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingEditInput
  user: Prisma.UserCreateNestedOneWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingEditInput
}

export type ListingEditUncheckedCreateInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId: number
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  categoryId?: number | null
  image?: string | null
  slug?: string | null
  locationId?: number | null
  userId: string
  accepted?: boolean
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingEditInput
}

export type ListingEditUpdateInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  listing?: Prisma.ListingUpdateOneRequiredWithoutEditsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingEditNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingEditNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingEditNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingEditNestedInput
}

export type ListingEditCreateManyInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId: number
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  categoryId?: number | null
  image?: string | null
  slug?: string | null
  locationId?: number | null
  userId: string
  accepted?: boolean
}

export type ListingEditUpdateManyMutationInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ListingEditUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ListingEditListRelationFilter = {
  every?: Prisma.ListingEditWhereInput
  some?: Prisma.ListingEditWhereInput
  none?: Prisma.ListingEditWhereInput
}

export type ListingEditOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ListingEditNullableScalarRelationFilter = {
  is?: Prisma.ListingEditWhereInput | null
  isNot?: Prisma.ListingEditWhereInput | null
}

export type ListingEditCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  website?: Prisma.SortOrder
  description?: Prisma.SortOrder
  email?: Prisma.SortOrder
  categoryId?: Prisma.SortOrder
  image?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  accepted?: Prisma.SortOrder
}

export type ListingEditAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  categoryId?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
}

export type ListingEditMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  website?: Prisma.SortOrder
  description?: Prisma.SortOrder
  email?: Prisma.SortOrder
  categoryId?: Prisma.SortOrder
  image?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  accepted?: Prisma.SortOrder
}

export type ListingEditMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  website?: Prisma.SortOrder
  description?: Prisma.SortOrder
  email?: Prisma.SortOrder
  categoryId?: Prisma.SortOrder
  image?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  accepted?: Prisma.SortOrder
}

export type ListingEditSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  listingId?: Prisma.SortOrder
  categoryId?: Prisma.SortOrder
  locationId?: Prisma.SortOrder
}

export type ListingEditCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutUserInput, Prisma.ListingEditUncheckedCreateWithoutUserInput> | Prisma.ListingEditCreateWithoutUserInput[] | Prisma.ListingEditUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutUserInput | Prisma.ListingEditCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.ListingEditCreateManyUserInputEnvelope
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
}

export type ListingEditUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutUserInput, Prisma.ListingEditUncheckedCreateWithoutUserInput> | Prisma.ListingEditCreateWithoutUserInput[] | Prisma.ListingEditUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutUserInput | Prisma.ListingEditCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.ListingEditCreateManyUserInputEnvelope
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
}

export type ListingEditUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutUserInput, Prisma.ListingEditUncheckedCreateWithoutUserInput> | Prisma.ListingEditCreateWithoutUserInput[] | Prisma.ListingEditUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutUserInput | Prisma.ListingEditCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.ListingEditUpsertWithWhereUniqueWithoutUserInput | Prisma.ListingEditUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.ListingEditCreateManyUserInputEnvelope
  set?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  disconnect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  delete?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  update?: Prisma.ListingEditUpdateWithWhereUniqueWithoutUserInput | Prisma.ListingEditUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.ListingEditUpdateManyWithWhereWithoutUserInput | Prisma.ListingEditUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.ListingEditScalarWhereInput | Prisma.ListingEditScalarWhereInput[]
}

export type ListingEditUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutUserInput, Prisma.ListingEditUncheckedCreateWithoutUserInput> | Prisma.ListingEditCreateWithoutUserInput[] | Prisma.ListingEditUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutUserInput | Prisma.ListingEditCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.ListingEditUpsertWithWhereUniqueWithoutUserInput | Prisma.ListingEditUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.ListingEditCreateManyUserInputEnvelope
  set?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  disconnect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  delete?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  update?: Prisma.ListingEditUpdateWithWhereUniqueWithoutUserInput | Prisma.ListingEditUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.ListingEditUpdateManyWithWhereWithoutUserInput | Prisma.ListingEditUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.ListingEditScalarWhereInput | Prisma.ListingEditScalarWhereInput[]
}

export type ListingEditCreateNestedManyWithoutCategoryInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutCategoryInput, Prisma.ListingEditUncheckedCreateWithoutCategoryInput> | Prisma.ListingEditCreateWithoutCategoryInput[] | Prisma.ListingEditUncheckedCreateWithoutCategoryInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutCategoryInput | Prisma.ListingEditCreateOrConnectWithoutCategoryInput[]
  createMany?: Prisma.ListingEditCreateManyCategoryInputEnvelope
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
}

export type ListingEditUncheckedCreateNestedManyWithoutCategoryInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutCategoryInput, Prisma.ListingEditUncheckedCreateWithoutCategoryInput> | Prisma.ListingEditCreateWithoutCategoryInput[] | Prisma.ListingEditUncheckedCreateWithoutCategoryInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutCategoryInput | Prisma.ListingEditCreateOrConnectWithoutCategoryInput[]
  createMany?: Prisma.ListingEditCreateManyCategoryInputEnvelope
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
}

export type ListingEditUpdateManyWithoutCategoryNestedInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutCategoryInput, Prisma.ListingEditUncheckedCreateWithoutCategoryInput> | Prisma.ListingEditCreateWithoutCategoryInput[] | Prisma.ListingEditUncheckedCreateWithoutCategoryInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutCategoryInput | Prisma.ListingEditCreateOrConnectWithoutCategoryInput[]
  upsert?: Prisma.ListingEditUpsertWithWhereUniqueWithoutCategoryInput | Prisma.ListingEditUpsertWithWhereUniqueWithoutCategoryInput[]
  createMany?: Prisma.ListingEditCreateManyCategoryInputEnvelope
  set?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  disconnect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  delete?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  update?: Prisma.ListingEditUpdateWithWhereUniqueWithoutCategoryInput | Prisma.ListingEditUpdateWithWhereUniqueWithoutCategoryInput[]
  updateMany?: Prisma.ListingEditUpdateManyWithWhereWithoutCategoryInput | Prisma.ListingEditUpdateManyWithWhereWithoutCategoryInput[]
  deleteMany?: Prisma.ListingEditScalarWhereInput | Prisma.ListingEditScalarWhereInput[]
}

export type ListingEditUncheckedUpdateManyWithoutCategoryNestedInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutCategoryInput, Prisma.ListingEditUncheckedCreateWithoutCategoryInput> | Prisma.ListingEditCreateWithoutCategoryInput[] | Prisma.ListingEditUncheckedCreateWithoutCategoryInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutCategoryInput | Prisma.ListingEditCreateOrConnectWithoutCategoryInput[]
  upsert?: Prisma.ListingEditUpsertWithWhereUniqueWithoutCategoryInput | Prisma.ListingEditUpsertWithWhereUniqueWithoutCategoryInput[]
  createMany?: Prisma.ListingEditCreateManyCategoryInputEnvelope
  set?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  disconnect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  delete?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  update?: Prisma.ListingEditUpdateWithWhereUniqueWithoutCategoryInput | Prisma.ListingEditUpdateWithWhereUniqueWithoutCategoryInput[]
  updateMany?: Prisma.ListingEditUpdateManyWithWhereWithoutCategoryInput | Prisma.ListingEditUpdateManyWithWhereWithoutCategoryInput[]
  deleteMany?: Prisma.ListingEditScalarWhereInput | Prisma.ListingEditScalarWhereInput[]
}

export type ListingEditCreateNestedOneWithoutTagsInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutTagsInput, Prisma.ListingEditUncheckedCreateWithoutTagsInput>
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutTagsInput
  connect?: Prisma.ListingEditWhereUniqueInput
}

export type ListingEditUpdateOneWithoutTagsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutTagsInput, Prisma.ListingEditUncheckedCreateWithoutTagsInput>
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutTagsInput
  upsert?: Prisma.ListingEditUpsertWithoutTagsInput
  disconnect?: Prisma.ListingEditWhereInput | boolean
  delete?: Prisma.ListingEditWhereInput | boolean
  connect?: Prisma.ListingEditWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ListingEditUpdateToOneWithWhereWithoutTagsInput, Prisma.ListingEditUpdateWithoutTagsInput>, Prisma.ListingEditUncheckedUpdateWithoutTagsInput>
}

export type ListingEditCreateNestedManyWithoutListingInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutListingInput, Prisma.ListingEditUncheckedCreateWithoutListingInput> | Prisma.ListingEditCreateWithoutListingInput[] | Prisma.ListingEditUncheckedCreateWithoutListingInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutListingInput | Prisma.ListingEditCreateOrConnectWithoutListingInput[]
  createMany?: Prisma.ListingEditCreateManyListingInputEnvelope
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
}

export type ListingEditUncheckedCreateNestedManyWithoutListingInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutListingInput, Prisma.ListingEditUncheckedCreateWithoutListingInput> | Prisma.ListingEditCreateWithoutListingInput[] | Prisma.ListingEditUncheckedCreateWithoutListingInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutListingInput | Prisma.ListingEditCreateOrConnectWithoutListingInput[]
  createMany?: Prisma.ListingEditCreateManyListingInputEnvelope
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
}

export type ListingEditUpdateManyWithoutListingNestedInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutListingInput, Prisma.ListingEditUncheckedCreateWithoutListingInput> | Prisma.ListingEditCreateWithoutListingInput[] | Prisma.ListingEditUncheckedCreateWithoutListingInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutListingInput | Prisma.ListingEditCreateOrConnectWithoutListingInput[]
  upsert?: Prisma.ListingEditUpsertWithWhereUniqueWithoutListingInput | Prisma.ListingEditUpsertWithWhereUniqueWithoutListingInput[]
  createMany?: Prisma.ListingEditCreateManyListingInputEnvelope
  set?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  disconnect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  delete?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  update?: Prisma.ListingEditUpdateWithWhereUniqueWithoutListingInput | Prisma.ListingEditUpdateWithWhereUniqueWithoutListingInput[]
  updateMany?: Prisma.ListingEditUpdateManyWithWhereWithoutListingInput | Prisma.ListingEditUpdateManyWithWhereWithoutListingInput[]
  deleteMany?: Prisma.ListingEditScalarWhereInput | Prisma.ListingEditScalarWhereInput[]
}

export type ListingEditUncheckedUpdateManyWithoutListingNestedInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutListingInput, Prisma.ListingEditUncheckedCreateWithoutListingInput> | Prisma.ListingEditCreateWithoutListingInput[] | Prisma.ListingEditUncheckedCreateWithoutListingInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutListingInput | Prisma.ListingEditCreateOrConnectWithoutListingInput[]
  upsert?: Prisma.ListingEditUpsertWithWhereUniqueWithoutListingInput | Prisma.ListingEditUpsertWithWhereUniqueWithoutListingInput[]
  createMany?: Prisma.ListingEditCreateManyListingInputEnvelope
  set?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  disconnect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  delete?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  update?: Prisma.ListingEditUpdateWithWhereUniqueWithoutListingInput | Prisma.ListingEditUpdateWithWhereUniqueWithoutListingInput[]
  updateMany?: Prisma.ListingEditUpdateManyWithWhereWithoutListingInput | Prisma.ListingEditUpdateManyWithWhereWithoutListingInput[]
  deleteMany?: Prisma.ListingEditScalarWhereInput | Prisma.ListingEditScalarWhereInput[]
}

export type ListingEditCreateNestedOneWithoutSocialsInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutSocialsInput, Prisma.ListingEditUncheckedCreateWithoutSocialsInput>
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutSocialsInput
  connect?: Prisma.ListingEditWhereUniqueInput
}

export type ListingEditUpdateOneWithoutSocialsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutSocialsInput, Prisma.ListingEditUncheckedCreateWithoutSocialsInput>
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutSocialsInput
  upsert?: Prisma.ListingEditUpsertWithoutSocialsInput
  disconnect?: Prisma.ListingEditWhereInput | boolean
  delete?: Prisma.ListingEditWhereInput | boolean
  connect?: Prisma.ListingEditWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ListingEditUpdateToOneWithWhereWithoutSocialsInput, Prisma.ListingEditUpdateWithoutSocialsInput>, Prisma.ListingEditUncheckedUpdateWithoutSocialsInput>
}

export type ListingEditCreateNestedOneWithoutActionsInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutActionsInput, Prisma.ListingEditUncheckedCreateWithoutActionsInput>
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutActionsInput
  connect?: Prisma.ListingEditWhereUniqueInput
}

export type ListingEditUpdateOneWithoutActionsNestedInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutActionsInput, Prisma.ListingEditUncheckedCreateWithoutActionsInput>
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutActionsInput
  upsert?: Prisma.ListingEditUpsertWithoutActionsInput
  disconnect?: Prisma.ListingEditWhereInput | boolean
  delete?: Prisma.ListingEditWhereInput | boolean
  connect?: Prisma.ListingEditWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ListingEditUpdateToOneWithWhereWithoutActionsInput, Prisma.ListingEditUpdateWithoutActionsInput>, Prisma.ListingEditUncheckedUpdateWithoutActionsInput>
}

export type ListingEditCreateNestedManyWithoutLocationInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutLocationInput, Prisma.ListingEditUncheckedCreateWithoutLocationInput> | Prisma.ListingEditCreateWithoutLocationInput[] | Prisma.ListingEditUncheckedCreateWithoutLocationInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutLocationInput | Prisma.ListingEditCreateOrConnectWithoutLocationInput[]
  createMany?: Prisma.ListingEditCreateManyLocationInputEnvelope
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
}

export type ListingEditUncheckedCreateNestedManyWithoutLocationInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutLocationInput, Prisma.ListingEditUncheckedCreateWithoutLocationInput> | Prisma.ListingEditCreateWithoutLocationInput[] | Prisma.ListingEditUncheckedCreateWithoutLocationInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutLocationInput | Prisma.ListingEditCreateOrConnectWithoutLocationInput[]
  createMany?: Prisma.ListingEditCreateManyLocationInputEnvelope
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
}

export type ListingEditUpdateManyWithoutLocationNestedInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutLocationInput, Prisma.ListingEditUncheckedCreateWithoutLocationInput> | Prisma.ListingEditCreateWithoutLocationInput[] | Prisma.ListingEditUncheckedCreateWithoutLocationInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutLocationInput | Prisma.ListingEditCreateOrConnectWithoutLocationInput[]
  upsert?: Prisma.ListingEditUpsertWithWhereUniqueWithoutLocationInput | Prisma.ListingEditUpsertWithWhereUniqueWithoutLocationInput[]
  createMany?: Prisma.ListingEditCreateManyLocationInputEnvelope
  set?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  disconnect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  delete?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  update?: Prisma.ListingEditUpdateWithWhereUniqueWithoutLocationInput | Prisma.ListingEditUpdateWithWhereUniqueWithoutLocationInput[]
  updateMany?: Prisma.ListingEditUpdateManyWithWhereWithoutLocationInput | Prisma.ListingEditUpdateManyWithWhereWithoutLocationInput[]
  deleteMany?: Prisma.ListingEditScalarWhereInput | Prisma.ListingEditScalarWhereInput[]
}

export type ListingEditUncheckedUpdateManyWithoutLocationNestedInput = {
  create?: Prisma.XOR<Prisma.ListingEditCreateWithoutLocationInput, Prisma.ListingEditUncheckedCreateWithoutLocationInput> | Prisma.ListingEditCreateWithoutLocationInput[] | Prisma.ListingEditUncheckedCreateWithoutLocationInput[]
  connectOrCreate?: Prisma.ListingEditCreateOrConnectWithoutLocationInput | Prisma.ListingEditCreateOrConnectWithoutLocationInput[]
  upsert?: Prisma.ListingEditUpsertWithWhereUniqueWithoutLocationInput | Prisma.ListingEditUpsertWithWhereUniqueWithoutLocationInput[]
  createMany?: Prisma.ListingEditCreateManyLocationInputEnvelope
  set?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  disconnect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  delete?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  connect?: Prisma.ListingEditWhereUniqueInput | Prisma.ListingEditWhereUniqueInput[]
  update?: Prisma.ListingEditUpdateWithWhereUniqueWithoutLocationInput | Prisma.ListingEditUpdateWithWhereUniqueWithoutLocationInput[]
  updateMany?: Prisma.ListingEditUpdateManyWithWhereWithoutLocationInput | Prisma.ListingEditUpdateManyWithWhereWithoutLocationInput[]
  deleteMany?: Prisma.ListingEditScalarWhereInput | Prisma.ListingEditScalarWhereInput[]
}

export type ListingEditCreateWithoutUserInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  image?: string | null
  slug?: string | null
  accepted?: boolean
  listing: Prisma.ListingCreateNestedOneWithoutEditsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingEditInput
  tags?: Prisma.TagCreateNestedManyWithoutListingEditInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingEditInput
}

export type ListingEditUncheckedCreateWithoutUserInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId: number
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  categoryId?: number | null
  image?: string | null
  slug?: string | null
  locationId?: number | null
  accepted?: boolean
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingEditInput
}

export type ListingEditCreateOrConnectWithoutUserInput = {
  where: Prisma.ListingEditWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutUserInput, Prisma.ListingEditUncheckedCreateWithoutUserInput>
}

export type ListingEditCreateManyUserInputEnvelope = {
  data: Prisma.ListingEditCreateManyUserInput | Prisma.ListingEditCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type ListingEditUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.ListingEditWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingEditUpdateWithoutUserInput, Prisma.ListingEditUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutUserInput, Prisma.ListingEditUncheckedCreateWithoutUserInput>
}

export type ListingEditUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.ListingEditWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingEditUpdateWithoutUserInput, Prisma.ListingEditUncheckedUpdateWithoutUserInput>
}

export type ListingEditUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.ListingEditScalarWhereInput
  data: Prisma.XOR<Prisma.ListingEditUpdateManyMutationInput, Prisma.ListingEditUncheckedUpdateManyWithoutUserInput>
}

export type ListingEditScalarWhereInput = {
  AND?: Prisma.ListingEditScalarWhereInput | Prisma.ListingEditScalarWhereInput[]
  OR?: Prisma.ListingEditScalarWhereInput[]
  NOT?: Prisma.ListingEditScalarWhereInput | Prisma.ListingEditScalarWhereInput[]
  id?: Prisma.IntFilter<"ListingEdit"> | number
  createdAt?: Prisma.DateTimeFilter<"ListingEdit"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ListingEdit"> | Date | string
  listingId?: Prisma.IntFilter<"ListingEdit"> | number
  title?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  website?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  description?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  email?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  categoryId?: Prisma.IntNullableFilter<"ListingEdit"> | number | null
  image?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  slug?: Prisma.StringNullableFilter<"ListingEdit"> | string | null
  locationId?: Prisma.IntNullableFilter<"ListingEdit"> | number | null
  userId?: Prisma.StringFilter<"ListingEdit"> | string
  accepted?: Prisma.BoolFilter<"ListingEdit"> | boolean
}

export type ListingEditCreateWithoutCategoryInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  image?: string | null
  slug?: string | null
  accepted?: boolean
  listing: Prisma.ListingCreateNestedOneWithoutEditsInput
  tags?: Prisma.TagCreateNestedManyWithoutListingEditInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingEditInput
  user: Prisma.UserCreateNestedOneWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingEditInput
}

export type ListingEditUncheckedCreateWithoutCategoryInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId: number
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  image?: string | null
  slug?: string | null
  locationId?: number | null
  userId: string
  accepted?: boolean
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingEditInput
}

export type ListingEditCreateOrConnectWithoutCategoryInput = {
  where: Prisma.ListingEditWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutCategoryInput, Prisma.ListingEditUncheckedCreateWithoutCategoryInput>
}

export type ListingEditCreateManyCategoryInputEnvelope = {
  data: Prisma.ListingEditCreateManyCategoryInput | Prisma.ListingEditCreateManyCategoryInput[]
  skipDuplicates?: boolean
}

export type ListingEditUpsertWithWhereUniqueWithoutCategoryInput = {
  where: Prisma.ListingEditWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingEditUpdateWithoutCategoryInput, Prisma.ListingEditUncheckedUpdateWithoutCategoryInput>
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutCategoryInput, Prisma.ListingEditUncheckedCreateWithoutCategoryInput>
}

export type ListingEditUpdateWithWhereUniqueWithoutCategoryInput = {
  where: Prisma.ListingEditWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingEditUpdateWithoutCategoryInput, Prisma.ListingEditUncheckedUpdateWithoutCategoryInput>
}

export type ListingEditUpdateManyWithWhereWithoutCategoryInput = {
  where: Prisma.ListingEditScalarWhereInput
  data: Prisma.XOR<Prisma.ListingEditUpdateManyMutationInput, Prisma.ListingEditUncheckedUpdateManyWithoutCategoryInput>
}

export type ListingEditCreateWithoutTagsInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  image?: string | null
  slug?: string | null
  accepted?: boolean
  listing: Prisma.ListingCreateNestedOneWithoutEditsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingEditInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingEditInput
  user: Prisma.UserCreateNestedOneWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingEditInput
}

export type ListingEditUncheckedCreateWithoutTagsInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId: number
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  categoryId?: number | null
  image?: string | null
  slug?: string | null
  locationId?: number | null
  userId: string
  accepted?: boolean
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingEditInput
}

export type ListingEditCreateOrConnectWithoutTagsInput = {
  where: Prisma.ListingEditWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutTagsInput, Prisma.ListingEditUncheckedCreateWithoutTagsInput>
}

export type ListingEditUpsertWithoutTagsInput = {
  update: Prisma.XOR<Prisma.ListingEditUpdateWithoutTagsInput, Prisma.ListingEditUncheckedUpdateWithoutTagsInput>
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutTagsInput, Prisma.ListingEditUncheckedCreateWithoutTagsInput>
  where?: Prisma.ListingEditWhereInput
}

export type ListingEditUpdateToOneWithWhereWithoutTagsInput = {
  where?: Prisma.ListingEditWhereInput
  data: Prisma.XOR<Prisma.ListingEditUpdateWithoutTagsInput, Prisma.ListingEditUncheckedUpdateWithoutTagsInput>
}

export type ListingEditUpdateWithoutTagsInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  listing?: Prisma.ListingUpdateOneRequiredWithoutEditsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingEditNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingEditNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateWithoutTagsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingEditNestedInput
}

export type ListingEditCreateWithoutListingInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  image?: string | null
  slug?: string | null
  accepted?: boolean
  category?: Prisma.CategoryCreateNestedOneWithoutListingEditInput
  tags?: Prisma.TagCreateNestedManyWithoutListingEditInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingEditInput
  user: Prisma.UserCreateNestedOneWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingEditInput
}

export type ListingEditUncheckedCreateWithoutListingInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  categoryId?: number | null
  image?: string | null
  slug?: string | null
  locationId?: number | null
  userId: string
  accepted?: boolean
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingEditInput
}

export type ListingEditCreateOrConnectWithoutListingInput = {
  where: Prisma.ListingEditWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutListingInput, Prisma.ListingEditUncheckedCreateWithoutListingInput>
}

export type ListingEditCreateManyListingInputEnvelope = {
  data: Prisma.ListingEditCreateManyListingInput | Prisma.ListingEditCreateManyListingInput[]
  skipDuplicates?: boolean
}

export type ListingEditUpsertWithWhereUniqueWithoutListingInput = {
  where: Prisma.ListingEditWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingEditUpdateWithoutListingInput, Prisma.ListingEditUncheckedUpdateWithoutListingInput>
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutListingInput, Prisma.ListingEditUncheckedCreateWithoutListingInput>
}

export type ListingEditUpdateWithWhereUniqueWithoutListingInput = {
  where: Prisma.ListingEditWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingEditUpdateWithoutListingInput, Prisma.ListingEditUncheckedUpdateWithoutListingInput>
}

export type ListingEditUpdateManyWithWhereWithoutListingInput = {
  where: Prisma.ListingEditScalarWhereInput
  data: Prisma.XOR<Prisma.ListingEditUpdateManyMutationInput, Prisma.ListingEditUncheckedUpdateManyWithoutListingInput>
}

export type ListingEditCreateWithoutSocialsInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  image?: string | null
  slug?: string | null
  accepted?: boolean
  listing: Prisma.ListingCreateNestedOneWithoutEditsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingEditInput
  tags?: Prisma.TagCreateNestedManyWithoutListingEditInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingEditInput
  user: Prisma.UserCreateNestedOneWithoutListingEditInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingEditInput
}

export type ListingEditUncheckedCreateWithoutSocialsInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId: number
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  categoryId?: number | null
  image?: string | null
  slug?: string | null
  locationId?: number | null
  userId: string
  accepted?: boolean
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingEditInput
}

export type ListingEditCreateOrConnectWithoutSocialsInput = {
  where: Prisma.ListingEditWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutSocialsInput, Prisma.ListingEditUncheckedCreateWithoutSocialsInput>
}

export type ListingEditUpsertWithoutSocialsInput = {
  update: Prisma.XOR<Prisma.ListingEditUpdateWithoutSocialsInput, Prisma.ListingEditUncheckedUpdateWithoutSocialsInput>
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutSocialsInput, Prisma.ListingEditUncheckedCreateWithoutSocialsInput>
  where?: Prisma.ListingEditWhereInput
}

export type ListingEditUpdateToOneWithWhereWithoutSocialsInput = {
  where?: Prisma.ListingEditWhereInput
  data: Prisma.XOR<Prisma.ListingEditUpdateWithoutSocialsInput, Prisma.ListingEditUncheckedUpdateWithoutSocialsInput>
}

export type ListingEditUpdateWithoutSocialsInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  listing?: Prisma.ListingUpdateOneRequiredWithoutEditsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingEditNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingEditNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingEditNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateWithoutSocialsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingEditNestedInput
}

export type ListingEditCreateWithoutActionsInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  image?: string | null
  slug?: string | null
  accepted?: boolean
  listing: Prisma.ListingCreateNestedOneWithoutEditsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingEditInput
  tags?: Prisma.TagCreateNestedManyWithoutListingEditInput
  location?: Prisma.ListingLocationCreateNestedOneWithoutListingEditInput
  user: Prisma.UserCreateNestedOneWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingEditInput
}

export type ListingEditUncheckedCreateWithoutActionsInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId: number
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  categoryId?: number | null
  image?: string | null
  slug?: string | null
  locationId?: number | null
  userId: string
  accepted?: boolean
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingEditInput
}

export type ListingEditCreateOrConnectWithoutActionsInput = {
  where: Prisma.ListingEditWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutActionsInput, Prisma.ListingEditUncheckedCreateWithoutActionsInput>
}

export type ListingEditUpsertWithoutActionsInput = {
  update: Prisma.XOR<Prisma.ListingEditUpdateWithoutActionsInput, Prisma.ListingEditUncheckedUpdateWithoutActionsInput>
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutActionsInput, Prisma.ListingEditUncheckedCreateWithoutActionsInput>
  where?: Prisma.ListingEditWhereInput
}

export type ListingEditUpdateToOneWithWhereWithoutActionsInput = {
  where?: Prisma.ListingEditWhereInput
  data: Prisma.XOR<Prisma.ListingEditUpdateWithoutActionsInput, Prisma.ListingEditUncheckedUpdateWithoutActionsInput>
}

export type ListingEditUpdateWithoutActionsInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  listing?: Prisma.ListingUpdateOneRequiredWithoutEditsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingEditNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingEditNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingEditNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateWithoutActionsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingEditNestedInput
}

export type ListingEditCreateWithoutLocationInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  image?: string | null
  slug?: string | null
  accepted?: boolean
  listing: Prisma.ListingCreateNestedOneWithoutEditsInput
  category?: Prisma.CategoryCreateNestedOneWithoutListingEditInput
  tags?: Prisma.TagCreateNestedManyWithoutListingEditInput
  user: Prisma.UserCreateNestedOneWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionCreateNestedManyWithoutListingEditInput
}

export type ListingEditUncheckedCreateWithoutLocationInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId: number
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  categoryId?: number | null
  image?: string | null
  slug?: string | null
  userId: string
  accepted?: boolean
  tags?: Prisma.TagUncheckedCreateNestedManyWithoutListingEditInput
  socials?: Prisma.ListingSocialMediaUncheckedCreateNestedManyWithoutListingEditInput
  actions?: Prisma.ListingActionUncheckedCreateNestedManyWithoutListingEditInput
}

export type ListingEditCreateOrConnectWithoutLocationInput = {
  where: Prisma.ListingEditWhereUniqueInput
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutLocationInput, Prisma.ListingEditUncheckedCreateWithoutLocationInput>
}

export type ListingEditCreateManyLocationInputEnvelope = {
  data: Prisma.ListingEditCreateManyLocationInput | Prisma.ListingEditCreateManyLocationInput[]
  skipDuplicates?: boolean
}

export type ListingEditUpsertWithWhereUniqueWithoutLocationInput = {
  where: Prisma.ListingEditWhereUniqueInput
  update: Prisma.XOR<Prisma.ListingEditUpdateWithoutLocationInput, Prisma.ListingEditUncheckedUpdateWithoutLocationInput>
  create: Prisma.XOR<Prisma.ListingEditCreateWithoutLocationInput, Prisma.ListingEditUncheckedCreateWithoutLocationInput>
}

export type ListingEditUpdateWithWhereUniqueWithoutLocationInput = {
  where: Prisma.ListingEditWhereUniqueInput
  data: Prisma.XOR<Prisma.ListingEditUpdateWithoutLocationInput, Prisma.ListingEditUncheckedUpdateWithoutLocationInput>
}

export type ListingEditUpdateManyWithWhereWithoutLocationInput = {
  where: Prisma.ListingEditScalarWhereInput
  data: Prisma.XOR<Prisma.ListingEditUpdateManyMutationInput, Prisma.ListingEditUncheckedUpdateManyWithoutLocationInput>
}

export type ListingEditCreateManyUserInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId: number
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  categoryId?: number | null
  image?: string | null
  slug?: string | null
  locationId?: number | null
  accepted?: boolean
}

export type ListingEditUpdateWithoutUserInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  listing?: Prisma.ListingUpdateOneRequiredWithoutEditsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingEditNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingEditNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ListingEditCreateManyCategoryInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId: number
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  image?: string | null
  slug?: string | null
  locationId?: number | null
  userId: string
  accepted?: boolean
}

export type ListingEditUpdateWithoutCategoryInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  listing?: Prisma.ListingUpdateOneRequiredWithoutEditsNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingEditNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingEditNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateWithoutCategoryInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateManyWithoutCategoryInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ListingEditCreateManyListingInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  categoryId?: number | null
  image?: string | null
  slug?: string | null
  locationId?: number | null
  userId: string
  accepted?: boolean
}

export type ListingEditUpdateWithoutListingInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  category?: Prisma.CategoryUpdateOneWithoutListingEditNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingEditNestedInput
  location?: Prisma.ListingLocationUpdateOneWithoutListingEditNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateWithoutListingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateManyWithoutListingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  locationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ListingEditCreateManyLocationInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  listingId: number
  title?: string | null
  website?: string | null
  description?: string | null
  email?: string | null
  categoryId?: number | null
  image?: string | null
  slug?: string | null
  userId: string
  accepted?: boolean
}

export type ListingEditUpdateWithoutLocationInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  listing?: Prisma.ListingUpdateOneRequiredWithoutEditsNestedInput
  category?: Prisma.CategoryUpdateOneWithoutListingEditNestedInput
  tags?: Prisma.TagUpdateManyWithoutListingEditNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateWithoutLocationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
  tags?: Prisma.TagUncheckedUpdateManyWithoutListingEditNestedInput
  socials?: Prisma.ListingSocialMediaUncheckedUpdateManyWithoutListingEditNestedInput
  actions?: Prisma.ListingActionUncheckedUpdateManyWithoutListingEditNestedInput
}

export type ListingEditUncheckedUpdateManyWithoutLocationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  listingId?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  accepted?: Prisma.BoolFieldUpdateOperationsInput | boolean
}


/**
 * Count Type ListingEditCountOutputType
 */

export type ListingEditCountOutputType = {
  tags: number
  socials: number
  actions: number
}

export type ListingEditCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  tags?: boolean | ListingEditCountOutputTypeCountTagsArgs
  socials?: boolean | ListingEditCountOutputTypeCountSocialsArgs
  actions?: boolean | ListingEditCountOutputTypeCountActionsArgs
}

/**
 * ListingEditCountOutputType without action
 */
export type ListingEditCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEditCountOutputType
   */
  select?: Prisma.ListingEditCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ListingEditCountOutputType without action
 */
export type ListingEditCountOutputTypeCountTagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TagWhereInput
}

/**
 * ListingEditCountOutputType without action
 */
export type ListingEditCountOutputTypeCountSocialsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ListingSocialMediaWhereInput
}

/**
 * ListingEditCountOutputType without action
 */
export type ListingEditCountOutputTypeCountActionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ListingActionWhereInput
}


export type ListingEditSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  listingId?: boolean
  title?: boolean
  website?: boolean
  description?: boolean
  email?: boolean
  categoryId?: boolean
  image?: boolean
  slug?: boolean
  locationId?: boolean
  userId?: boolean
  accepted?: boolean
  listing?: boolean | Prisma.ListingDefaultArgs<ExtArgs>
  category?: boolean | Prisma.ListingEdit$categoryArgs<ExtArgs>
  tags?: boolean | Prisma.ListingEdit$tagsArgs<ExtArgs>
  location?: boolean | Prisma.ListingEdit$locationArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  socials?: boolean | Prisma.ListingEdit$socialsArgs<ExtArgs>
  actions?: boolean | Prisma.ListingEdit$actionsArgs<ExtArgs>
  _count?: boolean | Prisma.ListingEditCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["listingEdit"]>

export type ListingEditSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  listingId?: boolean
  title?: boolean
  website?: boolean
  description?: boolean
  email?: boolean
  categoryId?: boolean
  image?: boolean
  slug?: boolean
  locationId?: boolean
  userId?: boolean
  accepted?: boolean
  listing?: boolean | Prisma.ListingDefaultArgs<ExtArgs>
  category?: boolean | Prisma.ListingEdit$categoryArgs<ExtArgs>
  location?: boolean | Prisma.ListingEdit$locationArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["listingEdit"]>

export type ListingEditSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  listingId?: boolean
  title?: boolean
  website?: boolean
  description?: boolean
  email?: boolean
  categoryId?: boolean
  image?: boolean
  slug?: boolean
  locationId?: boolean
  userId?: boolean
  accepted?: boolean
  listing?: boolean | Prisma.ListingDefaultArgs<ExtArgs>
  category?: boolean | Prisma.ListingEdit$categoryArgs<ExtArgs>
  location?: boolean | Prisma.ListingEdit$locationArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["listingEdit"]>

export type ListingEditSelectScalar = {
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  listingId?: boolean
  title?: boolean
  website?: boolean
  description?: boolean
  email?: boolean
  categoryId?: boolean
  image?: boolean
  slug?: boolean
  locationId?: boolean
  userId?: boolean
  accepted?: boolean
}

export type ListingEditOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "listingId" | "title" | "website" | "description" | "email" | "categoryId" | "image" | "slug" | "locationId" | "userId" | "accepted", ExtArgs["result"]["listingEdit"]>
export type ListingEditInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  listing?: boolean | Prisma.ListingDefaultArgs<ExtArgs>
  category?: boolean | Prisma.ListingEdit$categoryArgs<ExtArgs>
  tags?: boolean | Prisma.ListingEdit$tagsArgs<ExtArgs>
  location?: boolean | Prisma.ListingEdit$locationArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  socials?: boolean | Prisma.ListingEdit$socialsArgs<ExtArgs>
  actions?: boolean | Prisma.ListingEdit$actionsArgs<ExtArgs>
  _count?: boolean | Prisma.ListingEditCountOutputTypeDefaultArgs<ExtArgs>
}
export type ListingEditIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  listing?: boolean | Prisma.ListingDefaultArgs<ExtArgs>
  category?: boolean | Prisma.ListingEdit$categoryArgs<ExtArgs>
  location?: boolean | Prisma.ListingEdit$locationArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type ListingEditIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  listing?: boolean | Prisma.ListingDefaultArgs<ExtArgs>
  category?: boolean | Prisma.ListingEdit$categoryArgs<ExtArgs>
  location?: boolean | Prisma.ListingEdit$locationArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $ListingEditPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ListingEdit"
  objects: {
    listing: Prisma.$ListingPayload<ExtArgs>
    category: Prisma.$CategoryPayload<ExtArgs> | null
    tags: Prisma.$TagPayload<ExtArgs>[]
    location: Prisma.$ListingLocationPayload<ExtArgs> | null
    user: Prisma.$UserPayload<ExtArgs>
    socials: Prisma.$ListingSocialMediaPayload<ExtArgs>[]
    actions: Prisma.$ListingActionPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    createdAt: Date
    updatedAt: Date
    listingId: number
    title: string | null
    website: string | null
    description: string | null
    email: string | null
    categoryId: number | null
    image: string | null
    slug: string | null
    locationId: number | null
    userId: string
    accepted: boolean
  }, ExtArgs["result"]["listingEdit"]>
  composites: {}
}

export type ListingEditGetPayload<S extends boolean | null | undefined | ListingEditDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ListingEditPayload, S>

export type ListingEditCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ListingEditFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ListingEditCountAggregateInputType | true
  }

export interface ListingEditDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListingEdit'], meta: { name: 'ListingEdit' } }
  /**
   * Find zero or one ListingEdit that matches the filter.
   * @param {ListingEditFindUniqueArgs} args - Arguments to find a ListingEdit
   * @example
   * // Get one ListingEdit
   * const listingEdit = await prisma.listingEdit.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ListingEditFindUniqueArgs>(args: Prisma.SelectSubset<T, ListingEditFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ListingEditClient<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ListingEdit that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ListingEditFindUniqueOrThrowArgs} args - Arguments to find a ListingEdit
   * @example
   * // Get one ListingEdit
   * const listingEdit = await prisma.listingEdit.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ListingEditFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ListingEditFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ListingEditClient<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ListingEdit that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingEditFindFirstArgs} args - Arguments to find a ListingEdit
   * @example
   * // Get one ListingEdit
   * const listingEdit = await prisma.listingEdit.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ListingEditFindFirstArgs>(args?: Prisma.SelectSubset<T, ListingEditFindFirstArgs<ExtArgs>>): Prisma.Prisma__ListingEditClient<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ListingEdit that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingEditFindFirstOrThrowArgs} args - Arguments to find a ListingEdit
   * @example
   * // Get one ListingEdit
   * const listingEdit = await prisma.listingEdit.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ListingEditFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ListingEditFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ListingEditClient<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ListingEdits that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingEditFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ListingEdits
   * const listingEdits = await prisma.listingEdit.findMany()
   * 
   * // Get first 10 ListingEdits
   * const listingEdits = await prisma.listingEdit.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const listingEditWithIdOnly = await prisma.listingEdit.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ListingEditFindManyArgs>(args?: Prisma.SelectSubset<T, ListingEditFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ListingEdit.
   * @param {ListingEditCreateArgs} args - Arguments to create a ListingEdit.
   * @example
   * // Create one ListingEdit
   * const ListingEdit = await prisma.listingEdit.create({
   *   data: {
   *     // ... data to create a ListingEdit
   *   }
   * })
   * 
   */
  create<T extends ListingEditCreateArgs>(args: Prisma.SelectSubset<T, ListingEditCreateArgs<ExtArgs>>): Prisma.Prisma__ListingEditClient<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ListingEdits.
   * @param {ListingEditCreateManyArgs} args - Arguments to create many ListingEdits.
   * @example
   * // Create many ListingEdits
   * const listingEdit = await prisma.listingEdit.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ListingEditCreateManyArgs>(args?: Prisma.SelectSubset<T, ListingEditCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ListingEdits and returns the data saved in the database.
   * @param {ListingEditCreateManyAndReturnArgs} args - Arguments to create many ListingEdits.
   * @example
   * // Create many ListingEdits
   * const listingEdit = await prisma.listingEdit.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ListingEdits and only return the `id`
   * const listingEditWithIdOnly = await prisma.listingEdit.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ListingEditCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ListingEditCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ListingEdit.
   * @param {ListingEditDeleteArgs} args - Arguments to delete one ListingEdit.
   * @example
   * // Delete one ListingEdit
   * const ListingEdit = await prisma.listingEdit.delete({
   *   where: {
   *     // ... filter to delete one ListingEdit
   *   }
   * })
   * 
   */
  delete<T extends ListingEditDeleteArgs>(args: Prisma.SelectSubset<T, ListingEditDeleteArgs<ExtArgs>>): Prisma.Prisma__ListingEditClient<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ListingEdit.
   * @param {ListingEditUpdateArgs} args - Arguments to update one ListingEdit.
   * @example
   * // Update one ListingEdit
   * const listingEdit = await prisma.listingEdit.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ListingEditUpdateArgs>(args: Prisma.SelectSubset<T, ListingEditUpdateArgs<ExtArgs>>): Prisma.Prisma__ListingEditClient<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ListingEdits.
   * @param {ListingEditDeleteManyArgs} args - Arguments to filter ListingEdits to delete.
   * @example
   * // Delete a few ListingEdits
   * const { count } = await prisma.listingEdit.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ListingEditDeleteManyArgs>(args?: Prisma.SelectSubset<T, ListingEditDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ListingEdits.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingEditUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ListingEdits
   * const listingEdit = await prisma.listingEdit.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ListingEditUpdateManyArgs>(args: Prisma.SelectSubset<T, ListingEditUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ListingEdits and returns the data updated in the database.
   * @param {ListingEditUpdateManyAndReturnArgs} args - Arguments to update many ListingEdits.
   * @example
   * // Update many ListingEdits
   * const listingEdit = await prisma.listingEdit.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ListingEdits and only return the `id`
   * const listingEditWithIdOnly = await prisma.listingEdit.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ListingEditUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ListingEditUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ListingEdit.
   * @param {ListingEditUpsertArgs} args - Arguments to update or create a ListingEdit.
   * @example
   * // Update or create a ListingEdit
   * const listingEdit = await prisma.listingEdit.upsert({
   *   create: {
   *     // ... data to create a ListingEdit
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ListingEdit we want to update
   *   }
   * })
   */
  upsert<T extends ListingEditUpsertArgs>(args: Prisma.SelectSubset<T, ListingEditUpsertArgs<ExtArgs>>): Prisma.Prisma__ListingEditClient<runtime.Types.Result.GetResult<Prisma.$ListingEditPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ListingEdits.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingEditCountArgs} args - Arguments to filter ListingEdits to count.
   * @example
   * // Count the number of ListingEdits
   * const count = await prisma.listingEdit.count({
   *   where: {
   *     // ... the filter for the ListingEdits we want to count
   *   }
   * })
  **/
  count<T extends ListingEditCountArgs>(
    args?: Prisma.Subset<T, ListingEditCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ListingEditCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ListingEdit.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingEditAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ListingEditAggregateArgs>(args: Prisma.Subset<T, ListingEditAggregateArgs>): Prisma.PrismaPromise<GetListingEditAggregateType<T>>

  /**
   * Group by ListingEdit.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ListingEditGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ListingEditGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ListingEditGroupByArgs['orderBy'] }
      : { orderBy?: ListingEditGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ListingEditGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingEditGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ListingEdit model
 */
readonly fields: ListingEditFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ListingEdit.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ListingEditClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  listing<T extends Prisma.ListingDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ListingDefaultArgs<ExtArgs>>): Prisma.Prisma__ListingClient<runtime.Types.Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  category<T extends Prisma.ListingEdit$categoryArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ListingEdit$categoryArgs<ExtArgs>>): Prisma.Prisma__CategoryClient<runtime.Types.Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  tags<T extends Prisma.ListingEdit$tagsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ListingEdit$tagsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  location<T extends Prisma.ListingEdit$locationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ListingEdit$locationArgs<ExtArgs>>): Prisma.Prisma__ListingLocationClient<runtime.Types.Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  socials<T extends Prisma.ListingEdit$socialsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ListingEdit$socialsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingSocialMediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  actions<T extends Prisma.ListingEdit$actionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ListingEdit$actionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ListingActionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ListingEdit model
 */
export interface ListingEditFieldRefs {
  readonly id: Prisma.FieldRef<"ListingEdit", 'Int'>
  readonly createdAt: Prisma.FieldRef<"ListingEdit", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ListingEdit", 'DateTime'>
  readonly listingId: Prisma.FieldRef<"ListingEdit", 'Int'>
  readonly title: Prisma.FieldRef<"ListingEdit", 'String'>
  readonly website: Prisma.FieldRef<"ListingEdit", 'String'>
  readonly description: Prisma.FieldRef<"ListingEdit", 'String'>
  readonly email: Prisma.FieldRef<"ListingEdit", 'String'>
  readonly categoryId: Prisma.FieldRef<"ListingEdit", 'Int'>
  readonly image: Prisma.FieldRef<"ListingEdit", 'String'>
  readonly slug: Prisma.FieldRef<"ListingEdit", 'String'>
  readonly locationId: Prisma.FieldRef<"ListingEdit", 'Int'>
  readonly userId: Prisma.FieldRef<"ListingEdit", 'String'>
  readonly accepted: Prisma.FieldRef<"ListingEdit", 'Boolean'>
}
    

// Custom InputTypes
/**
 * ListingEdit findUnique
 */
export type ListingEditFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
  /**
   * Filter, which ListingEdit to fetch.
   */
  where: Prisma.ListingEditWhereUniqueInput
}

/**
 * ListingEdit findUniqueOrThrow
 */
export type ListingEditFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
  /**
   * Filter, which ListingEdit to fetch.
   */
  where: Prisma.ListingEditWhereUniqueInput
}

/**
 * ListingEdit findFirst
 */
export type ListingEditFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
  /**
   * Filter, which ListingEdit to fetch.
   */
  where?: Prisma.ListingEditWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ListingEdits to fetch.
   */
  orderBy?: Prisma.ListingEditOrderByWithRelationInput | Prisma.ListingEditOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ListingEdits.
   */
  cursor?: Prisma.ListingEditWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ListingEdits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ListingEdits.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ListingEdits.
   */
  distinct?: Prisma.ListingEditScalarFieldEnum | Prisma.ListingEditScalarFieldEnum[]
}

/**
 * ListingEdit findFirstOrThrow
 */
export type ListingEditFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
  /**
   * Filter, which ListingEdit to fetch.
   */
  where?: Prisma.ListingEditWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ListingEdits to fetch.
   */
  orderBy?: Prisma.ListingEditOrderByWithRelationInput | Prisma.ListingEditOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ListingEdits.
   */
  cursor?: Prisma.ListingEditWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ListingEdits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ListingEdits.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ListingEdits.
   */
  distinct?: Prisma.ListingEditScalarFieldEnum | Prisma.ListingEditScalarFieldEnum[]
}

/**
 * ListingEdit findMany
 */
export type ListingEditFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
  /**
   * Filter, which ListingEdits to fetch.
   */
  where?: Prisma.ListingEditWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ListingEdits to fetch.
   */
  orderBy?: Prisma.ListingEditOrderByWithRelationInput | Prisma.ListingEditOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ListingEdits.
   */
  cursor?: Prisma.ListingEditWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ListingEdits from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ListingEdits.
   */
  skip?: number
  distinct?: Prisma.ListingEditScalarFieldEnum | Prisma.ListingEditScalarFieldEnum[]
}

/**
 * ListingEdit create
 */
export type ListingEditCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
  /**
   * The data needed to create a ListingEdit.
   */
  data: Prisma.XOR<Prisma.ListingEditCreateInput, Prisma.ListingEditUncheckedCreateInput>
}

/**
 * ListingEdit createMany
 */
export type ListingEditCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ListingEdits.
   */
  data: Prisma.ListingEditCreateManyInput | Prisma.ListingEditCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ListingEdit createManyAndReturn
 */
export type ListingEditCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * The data used to create many ListingEdits.
   */
  data: Prisma.ListingEditCreateManyInput | Prisma.ListingEditCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ListingEdit update
 */
export type ListingEditUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
  /**
   * The data needed to update a ListingEdit.
   */
  data: Prisma.XOR<Prisma.ListingEditUpdateInput, Prisma.ListingEditUncheckedUpdateInput>
  /**
   * Choose, which ListingEdit to update.
   */
  where: Prisma.ListingEditWhereUniqueInput
}

/**
 * ListingEdit updateMany
 */
export type ListingEditUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ListingEdits.
   */
  data: Prisma.XOR<Prisma.ListingEditUpdateManyMutationInput, Prisma.ListingEditUncheckedUpdateManyInput>
  /**
   * Filter which ListingEdits to update
   */
  where?: Prisma.ListingEditWhereInput
  /**
   * Limit how many ListingEdits to update.
   */
  limit?: number
}

/**
 * ListingEdit updateManyAndReturn
 */
export type ListingEditUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * The data used to update ListingEdits.
   */
  data: Prisma.XOR<Prisma.ListingEditUpdateManyMutationInput, Prisma.ListingEditUncheckedUpdateManyInput>
  /**
   * Filter which ListingEdits to update
   */
  where?: Prisma.ListingEditWhereInput
  /**
   * Limit how many ListingEdits to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ListingEdit upsert
 */
export type ListingEditUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
  /**
   * The filter to search for the ListingEdit to update in case it exists.
   */
  where: Prisma.ListingEditWhereUniqueInput
  /**
   * In case the ListingEdit found by the `where` argument doesn't exist, create a new ListingEdit with this data.
   */
  create: Prisma.XOR<Prisma.ListingEditCreateInput, Prisma.ListingEditUncheckedCreateInput>
  /**
   * In case the ListingEdit was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ListingEditUpdateInput, Prisma.ListingEditUncheckedUpdateInput>
}

/**
 * ListingEdit delete
 */
export type ListingEditDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
  /**
   * Filter which ListingEdit to delete.
   */
  where: Prisma.ListingEditWhereUniqueInput
}

/**
 * ListingEdit deleteMany
 */
export type ListingEditDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ListingEdits to delete
   */
  where?: Prisma.ListingEditWhereInput
  /**
   * Limit how many ListingEdits to delete.
   */
  limit?: number
}

/**
 * ListingEdit.category
 */
export type ListingEdit$categoryArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Category
   */
  select?: Prisma.CategorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Category
   */
  omit?: Prisma.CategoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CategoryInclude<ExtArgs> | null
  where?: Prisma.CategoryWhereInput
}

/**
 * ListingEdit.tags
 */
export type ListingEdit$tagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Tag
   */
  select?: Prisma.TagSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Tag
   */
  omit?: Prisma.TagOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TagInclude<ExtArgs> | null
  where?: Prisma.TagWhereInput
  orderBy?: Prisma.TagOrderByWithRelationInput | Prisma.TagOrderByWithRelationInput[]
  cursor?: Prisma.TagWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TagScalarFieldEnum | Prisma.TagScalarFieldEnum[]
}

/**
 * ListingEdit.location
 */
export type ListingEdit$locationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingLocation
   */
  select?: Prisma.ListingLocationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingLocation
   */
  omit?: Prisma.ListingLocationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingLocationInclude<ExtArgs> | null
  where?: Prisma.ListingLocationWhereInput
}

/**
 * ListingEdit.socials
 */
export type ListingEdit$socialsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingSocialMedia
   */
  select?: Prisma.ListingSocialMediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingSocialMedia
   */
  omit?: Prisma.ListingSocialMediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingSocialMediaInclude<ExtArgs> | null
  where?: Prisma.ListingSocialMediaWhereInput
  orderBy?: Prisma.ListingSocialMediaOrderByWithRelationInput | Prisma.ListingSocialMediaOrderByWithRelationInput[]
  cursor?: Prisma.ListingSocialMediaWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ListingSocialMediaScalarFieldEnum | Prisma.ListingSocialMediaScalarFieldEnum[]
}

/**
 * ListingEdit.actions
 */
export type ListingEdit$actionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingAction
   */
  select?: Prisma.ListingActionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingAction
   */
  omit?: Prisma.ListingActionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingActionInclude<ExtArgs> | null
  where?: Prisma.ListingActionWhereInput
  orderBy?: Prisma.ListingActionOrderByWithRelationInput | Prisma.ListingActionOrderByWithRelationInput[]
  cursor?: Prisma.ListingActionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ListingActionScalarFieldEnum | Prisma.ListingActionScalarFieldEnum[]
}

/**
 * ListingEdit without action
 */
export type ListingEditDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ListingEdit
   */
  select?: Prisma.ListingEditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ListingEdit
   */
  omit?: Prisma.ListingEditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingEditInclude<ExtArgs> | null
}
