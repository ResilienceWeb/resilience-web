
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models.ts'
export type * from './prismaNamespace.ts'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  Account: 'Account',
  User: 'User',
  Session: 'Session',
  Verification: 'Verification',
  VerificationToken: 'VerificationToken',
  Web: 'Web',
  Category: 'Category',
  Tag: 'Tag',
  Listing: 'Listing',
  ListingSocialMedia: 'ListingSocialMedia',
  ListingAction: 'ListingAction',
  ListingEdit: 'ListingEdit',
  ListingLocation: 'ListingLocation',
  WebLocation: 'WebLocation',
  Permission: 'Permission',
  Ownership: 'Ownership',
  WebAccess: 'WebAccess',
  WebFeature: 'WebFeature'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refreshToken: 'refreshToken',
  accessToken: 'accessToken',
  expires_in: 'expires_in',
  expires_at: 'expires_at',
  id_token: 'id_token',
  scope: 'scope',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


export const UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  role: 'role',
  banned: 'banned',
  banReason: 'banReason',
  banExpires: 'banExpires',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  expires: 'expires',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  sessionToken: 'sessionToken',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


export const VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type VerificationScalarFieldEnum = (typeof VerificationScalarFieldEnum)[keyof typeof VerificationScalarFieldEnum]


export const VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
} as const

export type VerificationTokenScalarFieldEnum = (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum]


export const WebScalarFieldEnum = {
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  id: 'id',
  title: 'title',
  slug: 'slug',
  description: 'description',
  contactEmail: 'contactEmail',
  published: 'published',
  image: 'image',
  locationId: 'locationId'
} as const

export type WebScalarFieldEnum = (typeof WebScalarFieldEnum)[keyof typeof WebScalarFieldEnum]


export const CategoryScalarFieldEnum = {
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  label: 'label',
  color: 'color',
  icon: 'icon',
  id: 'id',
  webId: 'webId'
} as const

export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


export const TagScalarFieldEnum = {
  id: 'id',
  label: 'label',
  webId: 'webId',
  listingEditId: 'listingEditId'
} as const

export type TagScalarFieldEnum = (typeof TagScalarFieldEnum)[keyof typeof TagScalarFieldEnum]


export const ListingScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  title: 'title',
  website: 'website',
  description: 'description',
  email: 'email',
  notes: 'notes',
  inactive: 'inactive',
  seekingVolunteers: 'seekingVolunteers',
  categoryId: 'categoryId',
  image: 'image',
  slug: 'slug',
  webId: 'webId',
  pending: 'pending',
  proposerId: 'proposerId',
  featured: 'featured',
  locationId: 'locationId'
} as const

export type ListingScalarFieldEnum = (typeof ListingScalarFieldEnum)[keyof typeof ListingScalarFieldEnum]


export const ListingSocialMediaScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  listingId: 'listingId',
  platform: 'platform',
  url: 'url',
  listingEditId: 'listingEditId'
} as const

export type ListingSocialMediaScalarFieldEnum = (typeof ListingSocialMediaScalarFieldEnum)[keyof typeof ListingSocialMediaScalarFieldEnum]


export const ListingActionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  listingId: 'listingId',
  type: 'type',
  url: 'url',
  listingEditId: 'listingEditId'
} as const

export type ListingActionScalarFieldEnum = (typeof ListingActionScalarFieldEnum)[keyof typeof ListingActionScalarFieldEnum]


export const ListingEditScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  listingId: 'listingId',
  title: 'title',
  website: 'website',
  description: 'description',
  email: 'email',
  categoryId: 'categoryId',
  image: 'image',
  slug: 'slug',
  locationId: 'locationId',
  userId: 'userId',
  accepted: 'accepted'
} as const

export type ListingEditScalarFieldEnum = (typeof ListingEditScalarFieldEnum)[keyof typeof ListingEditScalarFieldEnum]


export const ListingLocationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  latitude: 'latitude',
  longitude: 'longitude',
  description: 'description',
  noPhysicalLocation: 'noPhysicalLocation'
} as const

export type ListingLocationScalarFieldEnum = (typeof ListingLocationScalarFieldEnum)[keyof typeof ListingLocationScalarFieldEnum]


export const WebLocationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  latitude: 'latitude',
  longitude: 'longitude',
  description: 'description'
} as const

export type WebLocationScalarFieldEnum = (typeof WebLocationScalarFieldEnum)[keyof typeof WebLocationScalarFieldEnum]


export const PermissionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  email: 'email'
} as const

export type PermissionScalarFieldEnum = (typeof PermissionScalarFieldEnum)[keyof typeof PermissionScalarFieldEnum]


export const OwnershipScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  email: 'email'
} as const

export type OwnershipScalarFieldEnum = (typeof OwnershipScalarFieldEnum)[keyof typeof OwnershipScalarFieldEnum]


export const WebAccessScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  email: 'email',
  webId: 'webId',
  role: 'role'
} as const

export type WebAccessScalarFieldEnum = (typeof WebAccessScalarFieldEnum)[keyof typeof WebAccessScalarFieldEnum]


export const WebFeatureScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  webId: 'webId',
  feature: 'feature',
  enabled: 'enabled'
} as const

export type WebFeatureScalarFieldEnum = (typeof WebFeatureScalarFieldEnum)[keyof typeof WebFeatureScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

